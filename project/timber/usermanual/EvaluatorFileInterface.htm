<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:w="urn:schemas-microsoft-com:office:word" xmlns:st1="urn:schemas-microsoft-com:office:smarttags" xmlns="http://www.w3.org/TR/REC-html40">
	<head>
		<title>Evaluator File Interface:</title>
		<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
		<meta name="ProgId" content="FrontPage.Editor.Document">
		<meta name="Generator" content="Microsoft FrontPage 4.0">
		<meta name="Originator" content="Microsoft Word 9">
		<link rel="File-List" href="./EvaluatorFileInterface_files/filelist.xml">
			<link rel="Edit-Time-Data" href="./EvaluatorFileInterface_files/editdata.mso"> 
        <style> 
	span.GRAME {mso-gram-e: yes ;}
	 p.MsoNormal, li.MsoNormal, div.MsoNormal {mso-style-parent:""; margin:0in; margin-bottom:.0001pt; mso-pagination:widow-orphan; font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman";}
	h1 {mso-style-next:Normal; margin-top:12.0pt; margin-right:0in; margin-bottom:3.0pt; margin-left:0in; mso-pagination:widow-orphan; mso-outline-level:1; font-size:24.0pt; font-family:Arial; color:black; mso-font-kerning:16.0pt; font-weight:normal; mso-bidi-font-weight:bold;}
	h2 {mso-style-next:Normal; margin-top:12.0pt; margin-right:0in; margin-bottom:3.0pt; margin-left:0in; mso-pagination:widow-orphan; mso-outline-level:2; font-size:18.0pt; font-family:Arial; color:black; font-weight:normal; mso-bidi-font-weight:bold; mso-bidi-font-style:italic;}
	p.MsoBodyText, li.MsoBodyText, div.MsoBodyText {margin:0in; margin-bottom:.0001pt; text-align:justify; mso-pagination:widow-orphan; font-size:10.0pt; mso-bidi-font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman";}
	p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2 {margin:0in; margin-bottom:.0001pt; mso-pagination:widow-orphan; font-size:12.0pt; font-family:Arial; mso-fareast-font-family:"Times New Roman"; color:black;}
	p.MsoBodyText3, li.MsoBodyText3, div.MsoBodyText3 {margin:0in; margin-bottom:.0001pt; text-align:justify; mso-pagination:widow-orphan; font-size:12.0pt; font-family:Arial; mso-fareast-font-family:"Times New Roman"; color:black;}
	a:link, span.MsoHyperlink {color:#660000; text-decoration:underline; text-underline:single;}
	a:visited, span.MsoHyperlinkFollowed {color:purple; text-decoration:underline; text-underline:single;}
	p {margin-right:0in; mso-margin-top-alt:auto; mso-margin-bottom-alt:auto; margin-left:0in; mso-pagination:widow-orphan; font-size:12.0pt; font-family:"Times New Roman"; mso-fareast-font-family:"Times New Roman";}
	@page Section1 {size:11.0in 8.5in; mso-page-orientation:landscape; margin:1.25in 1.0in 1.25in 1.0in; mso-header-margin:.5in; mso-footer-margin:.5in; mso-paper-source:0;}
	div.Section1 {page:Section1;}
</style>
<o:SmartTagType name="place" namespaceuri="urn:schemas-microsoft-com:office:smarttags"></o:SmartTagType>
				<o:SmartTagType name="City" namespaceuri="urn:schemas-microsoft-com:office:smarttags"></o:SmartTagType>
	</head>
	<body lang="EN-US" link="#660000" vlink="purple" style='tab-interval:.5in'>
		<div class="Section1">
			<h1 style='MARGIN-TOP:0in'><a name="_top" id="_top">Physical&nbsp;Algebra&nbsp; </a>
			</h1>
			<p class="MsoNormal" style='tab-stops:list .5in .75in'><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>
            </p>
			<p class="MsoNormal"><b>&nbsp;<o:p></o:p></b></p>
			<p class="MsoBodyText2">
			   Timber allows the (advanced) user to execute queries by entering the physical plans directly. In this way, a query plan can be optimized to execute more efficiently than a naively generated plan. Some query 
				functionalities that are not currently&nbsp;supported at Timber's  XQuery level 
				are suppported at the physical plan level.</p>
			<P class="MsoBodyText2"><SPAN style="mso-spacerun: yes"></SPAN>&nbsp;</P>
			<P class="MsoBodyText2"><SPAN style="mso-spacerun: yes">A physical plan is 
composed of a sequence of iterators, </SPAN>listed in a depth-first preorder manner. First the 
				Iterator then its inputs. Each Iterator is on a separate line. A line in the 
				file that starts with a ‘*’ will be ignored (comment line). Start key is the 
				pedigree (unique id) of the node. Iterators are case-sensitive.&nbsp;File 
				name(s) where you will find more info about the Iterator or some of its input 
				is written underneath the Iterator name (column 1).</P>
			<p class="MsoNormal"><span style='COLOR:black;FONT-FAMILY:Arial'>&nbsp;<o:p></o:p></span></p>
			<p class="MsoBodyText3">
				The NRE is a unique number that gets assigned to a collection of nodes upon 
				retrieval from indices or database. In some iterators, where nodes are being 
				created (e.g. construct), NRE gets assigned to the newly created nodes. Each 
				node in the witness tree will have an NRE. This NRE is used to reference the 
				node.</p>
			<p class="MsoNormal" style='TEXT-ALIGN:justify'><span style='COLOR:black;
FONT-FAMILY:Arial'>&nbsp;<o:p></o:p></span></p>
			<p class="MsoNormal" style='TEXT-ALIGN:justify'><span style='COLOR:black;
FONT-FAMILY:Arial'>For example, we have a structural join following two index
accesses, in which we want to join </span><span style='FONT-SIZE:10pt;
COLOR:black;
FONT-FAMILY:Arial;
mso-bidi-font-size:12.0pt'>book</span><span style='COLOR:black;FONT-FAMILY:Arial'> with </span><span style='FONT-SIZE:10pt;
COLOR:black;
FONT-FAMILY:Arial;
mso-bidi-font-size:12.0pt'>author</span><span style='COLOR:black;FONT-FAMILY:Arial'>.<o:p></o:p></span></p>
			<p class="MsoNormal" style='TEXT-ALIGN:justify'><span style='COLOR:black;
FONT-FAMILY:Arial'>&nbsp;<o:p></o:p></span></p>
			<table border="1" cellspacing="0" cellpadding="0" style='BORDER-RIGHT:medium none; BORDER-TOP:medium none; BORDER-LEFT:medium none; BORDER-BOTTOM:medium none; BORDER-COLLAPSE:collapse; mso-border-alt:solid windowtext .5pt; mso-padding-alt:0in 5.4pt 0in 5.4pt'>
				<tr>
					<td width="878" valign="top">
						<p class="MsoNormal" style='TEXT-ALIGN:justify'><span style='FONT-SIZE:10pt;
  COLOR:black;
  FONT-FAMILY:Arial;
  mso-bidi-font-size:12.0pt'>J,D,3,9,-1,-1,16,A,B<o:p></o:p></span></p>
						<p class="MsoNormal" style='TEXT-ALIGN:justify'><span style='FONT-SIZE:10pt;
  COLOR:black;
  FONT-FAMILY:Arial;
  mso-bidi-font-size:12.0pt'>I,3,index_books_elementtag,books.xml,GIST,STR,book<o:p></o:p></span></p>
						<p class="MsoNormal" style='TEXT-ALIGN:justify'><span style='FONT-SIZE:10pt;
  COLOR:black;
  FONT-FAMILY:Arial;
  mso-bidi-font-size:12.0pt'>I,9,index_books_elementtag,books.xml,GIST,STR,author</span><span style='COLOR:black;FONT-FAMILY:Arial'><o:p></o:p>
							</span></p>
					</td>
				</tr>
			</table>
			<p class="MsoNormal" style='TEXT-ALIGN:justify'><span style='COLOR:black;
FONT-FAMILY:Arial'>&nbsp;<o:p></o:p></span></p>
			<p class="MsoBodyText"><span style='FONT-SIZE:12pt;COLOR:black;FONT-FAMILY:Arial'>We assign </span><span style='COLOR:black;FONT-FAMILY:Arial'>book
</span><span style='FONT-SIZE:12pt;COLOR:black;FONT-FAMILY:Arial'>nodes <FONT size="2">NRE</FONT> 3, and <FONT size="2">author</FONT> nodes </span><span style='COLOR:black;FONT-FAMILY:Arial'>NRE</span><span style='FONT-SIZE:12pt;COLOR:black;FONT-FAMILY:Arial'> 
9. When joining, we
reference&nbsp;node with </span><span style='COLOR:black;FONT-FAMILY:Arial'>NRE</span><span style='FONT-SIZE:12pt;COLOR:black;FONT-FAMILY:Arial'> 3 and node with </span><span style='COLOR:black;FONT-FAMILY:Arial'>NRE</span><span style='FONT-SIZE:12pt;
COLOR:black;
FONT-FAMILY:Arial'> 9, which will join </span><span style='COLOR:black;FONT-FAMILY:Arial'>book</span><span style='FONT-SIZE:12pt;
COLOR:black;
FONT-FAMILY:Arial'> and </span><span style='COLOR:black;
FONT-FAMILY:Arial'>author</span><span style='FONT-SIZE:12pt;COLOR:black;FONT-FAMILY:Arial'>.</span></p>
			<p class="MsoNormal"><span style='COLOR:black;FONT-FAMILY:Arial'>&nbsp;<o:p></o:p></span></p>
			<h2><a name="_Work_Information"></a>Physical Iterators</h2>
            <p> <a href="#_c">c</a>, 
            <a href="#_D">D</a>, <a href="#_d0">d</a>, 
            <a href="#_F">F</a>, <a href="#_f0">f</a>, <a href="#_G">G</a>, <a href="#_H">H</a>,
            <a href="#_I">I</a>,
            <a href="#_i0">i</a>, <a href="#_J">J</a>, <a href="#_K">K</a>, <a href="#_k0">k</a>, <a href="#_m">m</a>, <a href="#_n">n</a>,
            <a href="#_O">O</a>, <a href="#_P">P</a>, <a href="#_R">R</a>, <a href="#_r0">r</a>,&nbsp;
            <a href="#_S">S</a>, <a href="#_s0">s</a>, <a href="#_T">T</a>,
            <a href="#_t0">t</a>, <a href="#_u">u</a>, <a href="#_U">U</a>,
             <a href="#_V">V</a>, <a href="#_w">w</a>&nbsp;</p>
			<p class="MsoNormal"><span style='FONT-SIZE:11pt;mso-bidi-font-size:12.0pt'>&nbsp;</span><b><span style='FONT-SIZE:16pt;mso-bidi-font-size:12.0pt'><o:p></o:p>
					</span></b></p>
			<table border="1" cellspacing="0" cellpadding="0" style='border-collapse: collapse; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0in 5.4pt 0in 5.4pt; border-style: none; border-width: medium' width="1066" height="10006">
				<tr>
					<td width="177" valign="top" height="19">
						<p class="MsoNormal" align="center" style='TEXT-ALIGN:center'><b>Iterator<o:p></o:p></b></p>
					</td>
					<td width="473" valign="top" height="19">
						<p class="MsoNormal" align="center" style='TEXT-ALIGN:center'><b>Calling Format<o:p></o:p></b></p>
					</td>
					<td width="410" valign="top" height="19">
						<p class="MsoNormal" align="center" style='TEXT-ALIGN:center'><b>Parameter Explanation<o:p></o:p></b></p>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 1'>
					<td width="177" valign="top" height="180">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Index
  Access<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>IndexAccess.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>GistIndexAccess.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="180">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name="_I"></a>I,nre,indexName,filename,indexSource,indexType,value1,value2<o:p></o:p></span></p>
					</td>
					<td width="410" valign="top" height="180">
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>NRE:</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-weight:bold;mso-bidi-font-size:12.0pt'>
  the nre to be assigned to nodes retrieved from the index.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>IndexName</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>: name of the index.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Filename</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>: name of the file that
  the index is built on.</span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>IndexSource</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>: GIST: if the index is a
  gist index.<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>HASH: if index is a
  hash index.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>IndexType</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>: INT: the index key is an
  integer.<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>FLT: the index key is a
  float.<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>STR: the index key is a
  string.<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>DBL: the index key is a
  double.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Value1</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>: the key value you are
  asking for.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Value2</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>: if you are asking for a
  range, this is the second value. This is optional.<o:p></o:p></span></p>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 2'>
					<td width="177" valign="top" height="525">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Scan
  Access<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>ScanIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>SelectionCondition.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="525">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_S"></a></span><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">S,nre,fileName,rootKey,nodeType,returnType,num1,num2,Left,opr,rightType,right,<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">…..<span class="GramE">,num3,start,end</span>,…<o:p>
                        </o:p>
                        </span>
					</td>
					<td width="410" valign="top" height="525">
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">NRE:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold">
                        the <span class="SpellE">nre</span> to be assigned to
                        nodes retrieved from the database.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Filename</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        name of the file to scan.<b><o:p>
                        </o:p>
                        </b></span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">RootKey</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        start <span class="GramE">key</span> of the root element
                        in the file.<b> <o:p>
                        </o:p>
                        </b></span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">NodeType</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        type of the node to scan for.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>ALL_NODES: scan all nodes.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>DOCUMENT_NODE: scan doc nodes.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>ELEMENT_NODE: scan for element nodes.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>ATTRIBUTE_NODE: scan for attribute nodes.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>TEXT_NODE: scan for text nodes.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>COMMENT_NODE: scan for comment nodes.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">ReturnType</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        type of the node to be returned as part of the result of
                        the scan.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>THISNODE: return the node scanned.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>PARENTNODE: return the parent of the scanned
                        node.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>ELEMENTNODE: return the element node that is
                        closest to the scanned node (if attribute-node, get its
                        parent)<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>ATTRIBUTENODE: return the attribute node that is
                        closest to the scanned node (if <span class="SpellE">elem</span>-node,
                        get its <span class="SpellE">attrs</span>)<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>SUBTREE: return the <span class="SpellE">subtree</span>
                        of the scanned node.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Num1</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:<span style="mso-spacerun: yes">&nbsp;
                        </span>the number of disjunctive conditions you want to
                        apply on scanned nodes. Num2<span class="GramE">,Left,opr,rightType,right</span>
                        should occur num1number of times.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Num2</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        the number of conjunctive conditions in each <span class="SpellE">disjunct</span>.
                        <span class="SpellE">Left<span class="GramE">,opr,rightType,right</span></span>
                        should occur num2 number of times.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Left</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        one of the following values: (check <span class="SpellE">SelectionCondition.h</span>
                        for more details)
                        VALUE,LENGTH,XMLFILENAME,DTDFILENAME,NODETAG,<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">CHILDNUMBER,
                        ATTRIBUTENUMBER, HAS_CHILD,
                        HAS_ATTRIBUTE,ATTRIBUTE_VALUE,ELEMENTCONTENT</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">If
                        you choose ATTRIBUTE_VALUE then pass here an attribute
                        name.<b><o:p>
                        </o:p>
                        </b></span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Opr</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        one of the following values: EQ,LE,LT,GT,GE,NE: for
                        =,&lt;,&lt;=,&gt;,&gt;=,!=</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">CONTAIN,CONTAINEDBY,STARTWITH<b><o:p>
                        </o:p>
                        </b></span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">RightType</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        STR/INT/FLT<b><o:p>
                        </o:p>
                        </b></span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Right</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        value you want to be checked. if&nbsp; rightType is STR,
                        you can pass &lt;EMPTY&gt; to conmpare against empty
                        content. otherwise, pass a value.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Num3</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        number of scan ranges: <span class="SpellE">start<span class="GramE">,end</span></span>
                        should occur num3 number of times.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>The scan will scan the sub-trees contained in <span class="GramE">these
                        start-end</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Start:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;</span>the
                        start key of the first node to scan.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">End:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">the
                        end key of the last node to scan.</span><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 3'>
					<td width="177" valign="top" height="360">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Structural
  Join<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>StackBasedAncs.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>StackBasedDesc.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="360">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_J"></a>J,Algorithm,ancsNRE,descNRE,leftSiblingNRE</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>,<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>RightSiblingNRE,expectedDepth,relation,projectWhich,N</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="410" valign="top" height="360">
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Alg</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        A: if you want results to be sorted by <span class="SpellE">ancs</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>D: if you want results to be sorted by <span class="SpellE">desc</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>N: if you want a negated join (output <span class="SpellE">ancs</span>
                        that don’t have <span class="SpellE">desc</span>).<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span><span class="GramE">a</span>: if you want an <span class="SpellE">ancs</span>-outer
                        join sorted by <span class="SpellE">ancs</span>  (<span class="SpellE">ancs</span>
                        is output even if it doesn’t join).<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">AncsNRE</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        the <span class="SpellE">nre</span> of the <span class="SpellE">ancs</span>
                        in the <span class="SpellE">ancs</span> input witness
                        tree. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">DescNRE</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        the <span class="SpellE">nre</span> of the <span class="SpellE">desc</span>
                        in the <span class="SpellE">desc</span> input witness
                        tree. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">LeftSiblingNRE</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        the <span class="SpellE">nre</span>  of the left sibling
                        in ordered semantics. If you want unordered semantics,
                        Pass –1.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">RightSiblingNRE</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        the <span class="SpellE">nre</span>  of the right
                        sibling in ordered semantics. If you want unordered
                        semantics, Pass –1.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">ExpectedDepth</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        the expected depth of the <span class="SpellE">ancs</span>.
                        I.e. how many <span class="SpellE">ancs</span> are
                        likely to be nested under other <span class="SpellE"><span class="GramE">ancs</span>
                        </span><span class="GramE">.</span> If in doubt, pass
                        the depth of the XML document.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Relation</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        A: <span class="SpellE">ancs-desc</span> relationship
                        between two inputs to the join.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>P: parent-child relationship. The <span class="SpellE">ancs</span>
                        should be one level higher than <span class="SpellE">desc</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">ProjectWhich</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        what you want to keep in the output of this join. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>B: both <span class="SpellE">ancs</span> and <span class="SpellE">desc</span>
                        are kept.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>A: only <span class="SpellE">ancs</span> is kept.
                        Valid when <span class="SpellE">alg</span> = A.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>D: only <span class="SpellE">desc</span> is kept.
                        Valid when <span class="SpellE">alg</span> = D. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">N:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        this field is optional. If you pass an “N”, then
                        output of the join will be nested descendants. If you
                        don’t pass it or pass something else, output of join
                        will be <span class="SpellE">ancs-desc</span>  pairs.
                        Valid only with <span class="SpellE">stackBased</span>
                        ancestor join.</span><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 4'>
					<td width="177" valign="top" height="927">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Filter<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>FilterIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>FilterCondition.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="927">
                        <p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_f0"></a></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">f,num1,num2,app,lType,lNRE,lNum,lStr,opr,rType,rNRE,
                        </span><span class="SpellE"><span class="GramE"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">rNum,</span>
                        </span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">rStr</span>
                        </span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">,IndexName,FileName…<o:p>
                        </o:p>
                        </span></p>
					</td>
					<td width="410" valign="top" height="927">
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Num1</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        is the number of disjunctive conditions. Num2<span class="GramE">,lType</span>,
                        ….. <span class="GramE">should</span> occur num1
                        number of times.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Num2</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        number of conjunctive conditions in each disjunctive
                        condition. <span class="SpellE">App<span class="GramE">,lType,lIndex</span></span>,..
                        <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Should
                        <span class="GramE">occur</span> num2 number of times.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">App:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        is one of the following<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>E: the tree will pass if EVERY node with <span class="SpellE">nre</span>
                        <span class="SpellE">lNRE</span> matches the condition.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>AO: the tree will pass if AT LEAST ONE node with <span class="SpellE">nre</span>
                        <span class="SpellE">lNRE</span> matches the condition.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>EO: the tree will pass if EXACTLY ONE node with <span class="SpellE">nre</span>
                        <span class="SpellE">lNRE</span> matches the condition.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>EX: the tree will pass if EXACTLY ONE node has
                        the <span class="SpellE">nre</span> specified and it
                        matches the condition.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Note
                        that it is applied to the left part of the condition
                        only.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">lType</span></b></span>
                        </span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        type of the left value of the predicate.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>V: left side is a value.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>A: left side is an <span class="SpellE">attr</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>T: left side is text directly under node. (child
                        text)<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        &nbsp;&nbsp;&nbsp;&nbsp;</span>DT: left side is text
                        anywhere under node. (<span class="SpellE">desc</span>
                        text)<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>L: left side is length.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>LCV<span class="GramE">,LCA,LCT,LCDT,LCL</span>:
                        value/<span class="SpellE">attr/text/descText/length</span>
                        of local child.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>LAV<span class="GramE">,LAA,LAT,LADT,LAL</span>:
                        value/<span class="SpellE">attr/text/descText/length</span>
                        of local <span class="SpellE">ancs</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>ACV<span class="GramE">,ACA,ACT,ACDT,ACL</span>:
                        value/<span class="SpellE">attr/text/descText/length</span>
                        of actual child.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>AAV<span class="GramE">,AAA,AAT,AADT,AAL</span>:
                        value/<span class="SpellE">attr/text/descText/length</span>
                        of actual <span class="SpellE">ancs</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>SK: left side is a start key.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>EK: left side is an end key.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        &nbsp;&nbsp;&nbsp;</span>LEV: left side is a level.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>C: left side is a const.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>LF: left side is local fan-out.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>AF: left side is actual fan-out.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>LD: left side is local sub-tree depth.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>AD: left side is actual sub-tree depth.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>CI: left side is a constant that we are getting
                        from an Iterator.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">lNRE</span></b></span>
                        </span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        <span class="SpellE">nre</span> of the left node in the
                        left input witness tree. This node we will be using its
                        value, <span class="SpellE">attr</span>, text… etc.
                        depending on <span class="SpellE">lType</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">lNum</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        is the child number if <span class="SpellE">lType</span>
                        is one of the following:<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;
                        </span>LCV<span class="GramE">,LCA,LCT,LCDT,LCL,ACV,ACA,ACT,ACDT,ACL</span>.
                        <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Or
                        it is how many levels up you would like to go to get an
                        ancestor if <span class="SpellE">lType</span> is one of
                        the following:<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">LAV<span class="GramE">,LAA,LAT,LADT,LAL</span>,
                        AAV,AAA,AAT,AADT,AAL.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">If
                        <span class="SpellE">lType</span> = C and <span class="SpellE">opr</span>
                        uses number comparison then <span class="SpellE">lNum</span>
                        holds the number to be compared against.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">lStr</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        is <span class="SpellE">attrName</span> if <span class="SpellE">lType</span>
                        is one of the following:<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">A,
                        LCA<span class="GramE">,LAA,ACA,AAA</span>. Or if <span class="SpellE">lType</span>
                        is V and <span class="SpellE">lNRE</span> returns an
                        attribute node. Or if <span class="SpellE">lType</span>
                        is C and operation uses string comparison, then this
                        will hold the constant value to be compared against. if
                        you want to compare against an empty string, pass
                        &lt;EMPTY&gt; here.</span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">opr</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:EQN,NEN,LTN,LEN,GTN,GEN:=,!=,&lt;,&lt;=,&gt;,&gt;=
                        using number comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>EQS<span class="GramE">,NES,LTS,LES,GTS,GES</span>:=,!=,&lt;,&lt;=,&gt;,&gt;=
                        using string comparison.<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span><o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>S: left start with right. Strings.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>B: left is at the beginning of right. Strings.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>C: left contains right.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>CD: left contained in right.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>NS: left does not start with right.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>NC: left does not contain right.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">rType,</span>
                        </span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">rNRE,rNum</span>
                        </span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">,…
                        are exactly like the above except they are for the right
                        side of the condition.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><strong>IndexName:</strong>
                        if you want to use a join index to evaluate filter, pass
                        the name of the index here. otherwise, pass NULL.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><strong>FileName:</strong>
                        if you pass an indexName, you have to pass the xml file
                        name here. otherwise, pass NULL.</span><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><b><o:p></o:p></b></span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 5'>
					<td width="177" valign="top" height="353">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Sort<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>SortIterator.h</span>
							<o:p></o:p></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt'>ExternalSortIterator.h</span><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="353">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_R"></a>R,exp.Size,sortByWhat,num,nre,order</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>,whereEmptyGoes,…,X<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span>,order,X<o:p></o:p></span></p>
					</td>
					<td width="410" valign="top" height="353">
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">ExpectedSize</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        is the number of trees we are getting as input.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">SortByWhat</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:is</span>
                        </span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>K:
                        to sort by start key<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>S: to sort by witness tree score.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>T: to sort by the whole tree (start keys).<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">If<span style="mso-spacerun: yes">&nbsp;
                        </span>sorting by start key, give the following
                        parameters:<o:p>
                        </o:p>
                        </span></b></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Num</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        number of nodes you want to sort with. <span class="SpellE">nre,<span class="GramE">order.whereEmptyGoes</span></span>
                        should occur num number of times.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">nre</span></b></span>
                        </span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        <span class="SpellE">nre</span> of node in input witness
                        tree you want to be sorted with.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Order</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        A: ascending order.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>D: descending order.</span></p>
                        <span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><o:p>
                        
        <p class="MsoNormal"><b><b style="font-size: 10pt; mso-bidi-font-size: 12.0pt">WhereEmptyGoes</b><b style="font-size: 10pt; mso-bidi-font-size: 12.0pt">:</b> 
          </b><span style="mso-bidi-font-size: 12.0pt"><font size="2">where the 
          empty nodes go.&nbsp; So if you provide an nre and it returns no nodes, 
          this tree will be either put at the beginning or the end of the set 
          of trees to be sorted. It takes one of two values: <o:p> </o:p> </font></span></p>
                        <p class="MsoNormal"><span style="mso-bidi-font-size: 12.0pt"><font size="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        B: the empty ones will go at the beginning. <o:p>
                        </o:p>
                        </font></span></p>
                        <p class="MsoNormal"><span style="mso-bidi-font-size: 12.0pt"><font size="2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        E: the empty ones will be placed at the end. </font></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><o:p>
                        </o:p>
                        </p>
                        
        </o:p> 
        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">If
                        sorting by score or tree, give the following parameter:<o:p>
                        </o:p>
                        </span></b></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Order</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        A: ascending order.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>D: descending order.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">X:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        this field is optional. If you pass an “X”, external
                        sort will be used. If you don’t pass anything or pass
                        something else, in-memory quick sort will be used. </span><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'> <o:p></o:p></span>
                        </span></span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 6'>
					<td width="177" valign="top" height="439">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Value
  Sort<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>ValueSortIterator.h</span>
							<o:p></o:p></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>ExternalValueeSortIterator.h</span>&nbsp;<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="439">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_r0"></a>r,exp.Size,num,sortBy,NRE,order,attrName</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>,whereEmptyGoes…,X</span><o:p></o:p></p>
					</td>
					<td width="410" valign="top" height="439">
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">ExpectedSize</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        is the number of trees we are getting as input.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Num</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        number of nodes you want to sort with. <span class="SpellE"><span class="GramE">sortBy</span>
                        </span>, <span class="SpellE">nre,order,attrName,whereEmptyGoes</span>
                        should occur num number of times.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">SortBy</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        AN: sort by attribute value. Use number comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>AS: sort by attribute value. Use string
                        comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>TN: sort by text. Use number comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>TS:
                        sort by text. Use string comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>TG: sort by tag name.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>VN: sort by value. Value is text if <span class="SpellE">nre</span>
                        is for a text <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="GramE"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">node</span>
                        </span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">.
                        It is <span class="SpellE">tagname</span> if <span class="SpellE">nre</span>
                        is for an element node. It is attribute value if the <span class="SpellE">nre</span>
                        belongs to an attribute node. In the last case <span class="SpellE">attrName</span>
                        should be provided. Use number comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>VS: same as VN except use string comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>SK: sort by start key.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">NRE</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        NRE of element that you want to sort by its text or <span class="SpellE">attr</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Order</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        A: ascending.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>D: descending.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">AttrName</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        name of attribute to be sorted by in the case of AN, AS,
                        NV and VS. Pass NULL if<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>You want to sort by TN or TS.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">WhereEmptyGoes</span></b></span><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        where the empty nodes go.<span style="mso-spacerun: yes">&nbsp;
                        </span>So if you provide an <span class="SpellE">nre</span>
                        and it returns no nodes or you give an attribute name
                        that is not in there, this tree will be either put at
                        the beginning or the end of the set of trees to be
                        sorted. It takes one of two values:<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>B: the empty ones will go at the beginning.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>E: the empty ones will be placed at the end.</span></p>
                        <span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        <p class="MsoNormal"><b>X:</b> <span style="mso-bidi-font-size: 12.0pt"><font size="2">this 
          field is optional. If you pass an “X”, external sort will be used. If 
          you don’t pass anything or pass something else, in-memory quick sort 
          will be used.</font></span><o:p></o:p> </span> </td>
				</tr>
				<tr style='mso-yfti-irow: 7'>
					<td width="177" valign="top" height="75">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Set
  Ops.<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>UnionIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>–
  IntersectionIterator.h – DifferenceIterator.h<o:p></o:p></span></p>
					</td>
					<td width="473" valign="top" height="75">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_T"></a>T,whichOp,length</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="410" valign="top" height="75">
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>WhichOp</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>: U: union<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>I: intersection.<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>D: difference.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Length:</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'> starting from root, how many
  nodes you want to compare. Optional. If not specified, deep equality is used.<o:p></o:p></span></p>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 8'>
					<td width="177" valign="top" height="819">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Group
  by<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>GroupByIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="819">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_G"></a>G,exp.Sz,groupByWhat,GroupByNRE,GroupByAttrName,keepTrees,Num,opr,<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>oprOnWhat,attrName,NRE,opNRE</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>….rootNRE,valueNRE,sort<o:p></o:p></span></p>
					</td>
					<td width="410" valign="top" height="819">
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">ExpectedSize</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        is the number of trees we are getting as input.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">GroupByWhat</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        AN: attribute. Use number comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>AS: attribute. Use string comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>TN: text. Use number comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>TS: text. Use string comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>SK: start <span class="GramE">key</span>.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        VN: value. if groupBy NRE is an element, then we group
                        by tag. if groupBy NRE is an attr, then we group by
                        attribute value of attribute groupByAttrName. if groupBy
                        NRE is text, then we group by value of text. Use number
                        comparison.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        VS: value. if groupBy NRE is an element, then we group
                        by tag. if groupBy NRE is an attr, then we group by
                        attribute value of attribute groupByAttrName. if groupBy
                        NRE is text, then we group by value of text. Use&nbsp;string
                        comparison.</span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">GroupByNRE</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        the NRE of the element you want to group by its <span class="SpellE">attr</span>,
                        text or start <span class="GramE">key</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">groupbyAttrName</span></b></span>
                        </span><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        is the attribute name of the node if you are grouping by
                        attribute value. Otherwise, pass NULL.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">KeepTrees</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        0: do not keep the input trees. Just pass the grouped by
                        value.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>1: keep the input trees and pass the grouped by
                        value.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Num</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        number of operations to be performed on the grouped
                        trees. <span class="SpellE">Opr</span>, <span class="SpellE">oprOnWhat</span>,
                        <span class="SpellE">attrName<span class="GramE">,nre,opNRE</span></span>
                        should occur num number of times.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Opr</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        Operation to be performed on the grouped trees.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>C: count<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>A: <span class="SpellE">avg</span><o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>S: sum<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>M: max<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>m: min<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>N: none<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">OprOnWhat</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        On what you want to perform the operation.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>A: attribute. Number comparison.<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></p>
                        
        <p class="MsoNormal"><span style="mso-spacerun: yes; font-size: 10pt; mso-bidi-font-size: 12.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
          LA: local attr. not from DB. number omparison.</span></p>
        <p class="MsoNormal"><span style="mso-spacerun: yes; font-size: 10pt; mso-bidi-font-size: 12.0pt"> 
          &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;T: text. Number comparison.</span></p>
        <p class="MsoNormal"><o:p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
          <font size="2">LT</font>: <font size="2">local text. not from DB. Number 
          comparison.</font></o:p> </p>
                        
        <p class="MsoNormal">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font size="2">LF: 
          local <span class="SpellE">fanout</span>.<o:p> </o:p> </font></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>AF: actual <span class="SpellE">fanout</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>LD: local depth.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>AD: actual depth.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        V: value. if&nbsp; NRE is an element, then we perform
                        operation on tag. if NRE is an attr, then we perform
                        operation onattribute value of attribute AttrName. if
                        NRE is text, then we&nbsp;perform operation on&nbsp;value
                        of text. Use number comparison.</span> <o:p>
                        </o:p>
                        </p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">AttrName</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        name of attribute if <span class="GramE">AN or</span>
                        AS. NULL otherwise.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">NRE</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        NRE of node in input trees that you want to perform
                        operation on its text, <span class="SpellE">attr</span>,
                        <span class="SpellE">fanout</span> or depth. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">opNRE</span></b></span>
                        </span><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        the <span class="SpellE">nre</span> to be assigned to
                        the node holding the operation result value.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">rootNRE</span></b></span>
                        </span><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        the NRE to be assigned to the dummy root added to the
                        group by tree.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">valueNRE</span></b></span>
                        </span><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">the
                        NRE to be assigned to the dummy node holding the group
                        by value (it is the first child of the root).<span style="mso-bidi-font-weight: bold"><o:p>
                        </o:p>
                        </span></span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Sort:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        0/1. <span class="GramE">if</span> you want the <span class="SpellE">groupby</span>
                        to sort by grouped by value, pass 1. <span class="GramE">if</span>
                        results are already sorted by grouped by value, pass 0.</span><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 9'>
					<td width="177" valign="top" height="458">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Function<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>FunctionIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="458">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name="_F"></a>F,num,opr,oprOnWhat,attrName,NRE,opNRE</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>….treeLevel<o:p></o:p></span></p>
					</td>
					<td width="410" valign="top" height="458">
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Num</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        number of operations to be performed on input trees. <span class="SpellE">Opr</span>,
                        <span class="SpellE">oprOnWhat</span>, <span class="SpellE">attrName<span class="GramE">,nre,opNRE</span></span>
                        should occur num number of times.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Opr</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        C: count<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>A: <span class="SpellE">avg</span><o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>S: sum<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>M: max<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>m: min<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">OprOnWhat</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        A: attribute. Number comparison.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        LA: local attr. not from DB. number comparison.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>T: text. Number comparison.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><o:p>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LT:
                        local text. not from DB. Number comparison.</o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>LF: local <span class="SpellE">fanout</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>AF: actual <span class="SpellE">fanout</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>LD: local depth.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>AD:
                        actual depth.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><o:p>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        V: value. if&nbsp; NRE is an element, then we perform
                        operation on tag. if NRE is an attr, then we perform
                        operation onattribute value of attribute AttrName. if
                        NRE is text, then we&nbsp;perform operation on&nbsp;value
                        of text. Use number comparison.</o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">AttrName</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        name of attribute if <span class="GramE">AN or</span>
                        AS. NULL otherwise.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">NRE</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        NRE of node in input trees that you want to perform
                        operation on its text, <span class="SpellE">attr</span>,
                        <span class="SpellE">fanout</span> or depth. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">opNRE</span></b></span>
                        </span><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        the <span class="SpellE">nre</span> to be assigned to
                        the node holding the operation result value.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">treeLevel</span></b></span>
                        </span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold">:
                        if you want the operations to be performed on the tree
                        level pass 1. <span class="GramE">on</span> the input
                        level pass 0. The difference is that in the case of the
                        input level, the operations are performed across all
                        input trees and one output tree is generated holding the
                        operation result values. In the tree level case, the
                        operations are performed on every tree and the result
                        nodes are appended to the result.</span><span style='FONT-SIZE:10pt;mso-bidi-font-weight:bold;mso-bidi-font-size:12.0pt'><o:p></o:p></span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 10'>
					<td width="177" valign="top" height="1065">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Value
  join<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>ValueJoinIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="1065">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_j"></a>j,rootNRE,leftNRE,leftTag,rightNRE,rightTag,expSize,attrNameLeft,attrNameRight,<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>opr,joinWhatLeft,joinWhatRight,sortedInput,N,O,A</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="410" valign="top" height="1065">
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">RootNRE</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold">:
                        the <span class="SpellE">nre</span> to be assigned to
                        the dummy root added to the joined tree.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">LeftNRE</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        NRE of the node in the left input trees that will be
                        checked for join.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">LeftTag</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        <span class="GramE">the tag of the element in the left
                        input tree to perform value join</span> on. If you know
                        its NRE, pass NULL here and pass the NRE in <span class="SpellE">leftNRE</span>.
                        If <span class="SpellE">leftTag</span> is not NULL, <span class="SpellE">leftNRE</span>
                        is ignored.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">RightNRE</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        NRE of the node in the right input trees that will be
                        checked for join.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">RightTag</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        <span class="GramE">the tag of the element in the right
                        input tree to perform value join</span> on. If you know
                        its NRE, pass NULL here and pass the NRE in <span class="SpellE">rightNRE</span>.
                        If <span class="SpellE">rightTag</span> is not NULL, <span class="SpellE">rightNRE</span>
                        is ignored.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Exp.
                        Size</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        expected number of trees from the right input (join will
                        block on right input).<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">AttrNameLeft</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        if joining made based on an <span class="SpellE">attr</span>
                        value, then put <span class="SpellE">attr</span> Name of
                        the left input here. NULL otherwise.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">AttrNameRight</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        if joining made based on an <span class="SpellE">attr</span>
                        value, then put <span class="SpellE">attr</span> Name of
                        the right input here. NULL otherwise.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Operator:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">EQN:
                        equality <span class="GramE">join</span>. Use number
                        comparison<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>NEN: non-equality <span class="GramE">join</span>.
                        Use number comparison<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>LTN: if left is &lt; right, join. Use number
                        comparison<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>LEN: if left is &lt;= right, join. Use number
                        comparison<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>GTN: if left is &gt; right, join. Use number
                        comparison<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>GEN: if left is &gt;= right, join. Use number
                        comparison<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>EQS: equality <span class="GramE">join</span>.
                        Use string comparison<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>NES: non-equality <span class="GramE">join</span>.
                        Use string comparison<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>LTS: if left is &lt; right, join. Use string
                        comparison<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>LES: if left is &lt;= right, join. Use string
                        comparison<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>GTS: if left is &gt; right, join. Use string
                        comparison<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>GES: if left is &gt;= right, join. Use string
                        comparison<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>C: if left CONTAINS right. String comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>CB: if left CONTAINED BY right. String
                        comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">JoinWhatLeft</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        A: join by <span class="SpellE">attr</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>T: join by text.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DT:
                        join by text not directly underneath node. but even desc
                        text.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>S: join by start key.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>E: join be end key.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>L: join by level.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>N: join by nothing. Cartesian product.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><o:p>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        TR: join by subtree rooted at leftNRE. Tags, content,
                        and attributes are to be compared.</o:p>
                        </span></p>
                        
        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"> 
          </span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;
          TNR: join by subtree rooted at leftNRE. Tags, content, and attributes 
          are to be compared except the root tag.</span> </p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>V: value of the node <span class="SpellE">leftNRE</span>
                        if it is an element node, then tag name is <span class="GramE">used
                        .</span> <span class="GramE">if</span> it is an <span class="SpellE">attr</span>
                        node, then attribute <span class="SpellE">attrNameLeft</span>
                        is used. If it is a text node, then text is used.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">JoinWhatRight</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        A: join by <span class="SpellE">attr</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>T: join by text<span class="GramE">..</span></span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><o:p>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        DT: join by text not directly underneath node. but even
                        desc text.</o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>S: join by start key.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>E: join by end key.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>L: join by level.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>N: join by nothing. Cartesian product.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        TR: join by subtree rooted at rightNRE. Tags, content,
                        and attributes are to be compared.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        TNR: join by subtree rooted at rightNRE. Tags, content,
                        and attributes are to be compared except the root tag.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>V: value of the node <span class="SpellE">rightNRE</span>
                        if it is an element node, then tag name is <span class="GramE">used
                        .</span> <span class="GramE">if</span> it is an <span class="SpellE">attr</span>
                        node, then attribute <span class="SpellE">attrNameRight</span>
                        is used. If it is a text node, then text is used.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">SortedInput</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        0: if the input is not sorted by the join value.
                        (nested-loops join is performed)<o:p>
                        </o:p>
                        </span></p>
                        
        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
          </span>1: if t<font size="2">he input is already sorted by join value. 
          (sort-merge join is performed)</font></p>
                        
        <p class="MsoNormal"><strong><font size="2">IndexName:</font></strong><font size="2"> 
          if you want to use a join index to evaluate this join, pass the name 
          of the index here. otherwise, pass NULL.</font></p>
        <p class="MsoNormal"><font size="2"><strong>FileName:</strong> if you 
          pass an indexName, you have to pass the xml file name here. otherwise, 
          pass NULL.</font></p>
                        
        <p class="MsoNormal"><o:p></o:p><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">N:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"> 
          this parameter is optional. If you pass N, then the output of the join 
          will be nested by the left input. I.e. each left input tree will have 
          all joining right input trees with it in the output tree.<o:p> </o:p> 
          </span></p>
                        <p class="MsoNormal"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">O:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        this parameter is optional. If you pass O, then the join
                        will be left outer join. I.e. each left input tree will
                        be output whether or not it joined with a right input
                        tree<span class="GramE">..</span></span></p>
                        
        <p class="MsoNormal"><span class="GramE" style="font-size: 10pt; mso-bidi-font-size: 12.0pt"><strong>A:</strong> 
          this parameter is optional. if you pass it, at least one of all the 
          nodes with NRE leftNRE will need to match at least one of the nodes 
          with NRE rightNRE. This works only with nested-loops join.</span>      </td>
				</tr>
				<tr style='mso-yfti-irow: 11'>
					<td width="177" valign="top" height="138">
                        <font size="2">Index Hash Nested Value Join</font>
                        <p><font size="2">IndexHashValueJoinIterator.h</font></p>
                        <p>
					</td>
					<td width="473" valign="top" height="138">
                        <span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_H"></a></span><font size="2">H,expSize,indexName,filename,leftNRE,rightNRE,rootNRE,O,A</font>
					</td>
					<td width="410" valign="top" height="138">
                        <span style="font-size: 10pt; mso-bidi-font-size: 12.0pt">
                        <p class="MsoNormal"><strong>Exp. Size:</strong>
                        expected number of trees from the right input (join will
                        block on right input). <o:p>
                        </o:p>
                        </p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><strong>IndexName:</strong>The
                        name of the value join index. it is the index to which
                        we will be submitting start keys of node with leftNRE in
                        input trees and get right nodes</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><strong>FileName:</strong>
                        The name of the XML file where right trees come from.</span>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt" class="SpellE"><strong>LeftNRE</strong></span><strong>:</strong>
                        NRE of the node in the left input trees that will be
                        checked for join.</span>
                        <p class="MsoNormal"><span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><o:p>
                        <strong><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt" class="SpellE">RightNRE</span>:
                        </strong></o:p>
                        NRE of the node in the&nbsp;right input trees that will
                        be checked for join.</span></span></span>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><strong>RootNRE</strong></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold"><strong>:</strong>
                        the <span class="SpellE">nre</span> to be assigned to
                        the dummy root added to the joined tree.</span></p>
                        <p class="MsoNormal"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">O:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        this parameter is optional. If you pass O, then the join
                        will be left outer join. I.e. each left input tree will
                        be output whether or not it joined with a right input
                        tree<span class="GramE">..</span></span></p>
                        <p class="MsoNormal"><span class="GramE" style="font-size: 10pt; mso-bidi-font-size: 12.0pt"><strong>A:</strong>
                        this parameter is optional. if you pass it, at least one
                        of all the nodes with NRE leftNRE will need to match at
                        least one of the nodes with NRE rightNRE</span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 11'>
					<td width="177" valign="top" height="138">
                        <font size="2">One Sided Value Join</font>
                        <p><font size="2">OneSidedValueJoinIterator.h</font></p>
                        <p>
					</td>
					<td width="473" valign="top" height="138">
                        <span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_O"></a></span><font size="2">O,indexName,filename,leftNRE,assignedRightNRE,rootNRE,N,O</font>
					</td>
					<td width="410" valign="top" height="138">
                        <span>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><strong>IndexName:</strong>The
                        name of the value join index. it is the index to which
                        we will be submitting start keys of node with leftNRE in
                        input trees and get right nodes</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><strong>FileName:
                        </strong>The name of the XML file where right trees come
                        from.</span>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span class="SpellE"><b>LeftNRE</b></span>:
                        NRE of the node in the left input trees that will be
                        checked for join.</span>
                        <p class="MsoNormal"><span style="font-size: 10pt; mso-bidi-font-size: 12.0pt"><o:p>
                        <span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">assignedRightNRE</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        NRE to be assigned to the nodes read from the index.</span></o:p>
                        </span>
                        <p class="MsoNormal"><span style="font-size: 10pt; mso-bidi-font-size: 12.0pt"><o:p>
                        </o:p>
                        </span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><strong>RootNRE</strong></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold"><strong>:</strong>
                        the <span class="SpellE">nre</span> to be assigned to
                        the dummy root added to the joined tree.</span>
                        
        <p class="MsoNormal"><strong><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold"><o:p> 
          </o:p> </span><font size="2">N</font>:</strong><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"> 
          this parameter is optional. If you pass N, then the output of the join 
          will be nested by the left input. I.e. each left input tree will have 
          all joining right input trees with it in the output tree. <o:p> </o:p> 
          </span> 
        <p class="MsoNormal"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">O:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        this parameter is optional. If you pass O, then the join
                        will be left outer join. I.e. each left input tree will
                        be output whether or not it joined with a right input
                        tree<span class="GramE">.</span></span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 11'>
					<td width="177" valign="top" height="138">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Child
  Chooser<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>ChildChooserIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="138">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_c"></a>c,whichChild,num,parentNRE...</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="410" valign="top" height="138">
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">WhichChild</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        which child you want to pass. 1: first child. 2<span class="GramE">:second</span>
                        child,…. –1:last child. So this Iterator expects
                        input to have <span class="SpellE">ancs-desc</span>
                        pairs sorted by <span class="SpellE">ancs</span>. And it
                        will pass for each <span class="SpellE">ancs</span>, the
                        <span class="SpellE">i<sup> th</sup></span> occurrence.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><strong>num:</strong>
                        number of parents you want to pass their children.
                        parentNRE should occur num number of times.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">ParentNRE</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        the NRE of the <span class="SpellE">ancs</span> in the
                        input tree.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">What
                        this iterator does is for a group of ParentNREs, it will
                        pass the whichChild occurance in the input stream. input
                        should be sorted on parentNREs key.</span><o:p></o:p>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 12'>
					<td width="177" valign="top" height="270">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Duplicate
  Eliminator<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>DuplicateEliminatorIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="270">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_D"></a>D,byWhat,NRE,exp.Size,attrName,sort</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="410" valign="top" height="270">
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">ByWhat</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">SK:
                        eliminate trees with duplicate start key (id) of a
                        specific node.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>TR: eliminate duplicate trees based on start
                        keys. (whole tree is checked)<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>TS: eliminate trees with duplicate text values.
                        String comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>TN: eliminate trees with duplicate text values.
                        Number comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>AS: eliminate trees with duplicate <span class="SpellE">attr</span>
                        values. String comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>AN: eliminate trees with duplicate <span class="SpellE">attr</span>
                        values. Number comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">NRE</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        <span class="SpellE">nre</span> of the node to eliminate
                        duplicates by. If eliminating duplicates by tree, this
                        is ignored. If by start key, then the start key of this <span class="SpellE">nre</span>
                        is used in eliminating duplicates. If by text, the text
                        of the node with this <span class="SpellE">nre</span> is
                        used. If by <span class="SpellE">attr</span>, then the
                        attribute of this node is used.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">ExpectedSize</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        is the number of trees we are getting as input. Pass
                        whatever if sorting is turned off.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">AttrName</span></b></span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        if <span class="SpellE">byWhat</span> =AS or AN, then
                        this is the name of the attribute that you want to
                        eliminate duplicates of.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Sort</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        0: if you do not want it to sort input. (<span class="GramE">it</span>
                        is already sorted).<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>1: if you want the Iterator to sort input before
                        eliminating duplicates.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><o:p>
                        &nbsp;<strong>X</strong>: this field is optional. If you
                        pass an “X” and sort=1, external sort will be used.
                        If you don’t pass anything or pass something else and
                        sort=1, in-memory quick sort will be used. </span><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
                        <o:p></o:p></span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 13'>
					<td width="177" valign="top" height="165">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Phrase
  Finder<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>PhraseFinderIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="165">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_n"></a>n,NRE,indexName,filename,phrase</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="410" valign="top" height="165">
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>NRE:</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-weight:bold;mso-bidi-font-size:12.0pt'>
  the nre to be assigned to the output nodes.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>IndexName:</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'> is the name of the index
  to look up when searching for the words in the sentence. It should be some
  kind of an inverted index or so.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Filename:
  </span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun: yes">&nbsp;</span>name of the file the index is built on.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Phrase:</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'> this is the phrase you
  want to find in the document. You can have “*” anywhere in the phrase to
  represent wildcards. For example, phrase: “hello ** world”<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Will
  match “hello bad ugly world”, “hello blah blah world” but not “hello world”
  or “hello blah world”. Also, if you want to make sure that hello is the
  second word in the text, you should do “* hello world” third :”** hello
  world”. <o:p></o:p></span></p>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 14'>
					<td width="177" valign="top" height="1977">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Construct<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Iterator<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>ConstructIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="1977">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_s0"></a>s,n1,lev,type,src,NRE,str1<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span>str1,str2<span style="mso-spacerun:
  yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span>str1,rootNRE,n2,ns,lev,rel,getWhat,attrName….<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span>rootNRE,n2,ns,lev,rel,getWhat,attrName….<span style="mso-spacerun:
  yes">&nbsp;&nbsp; </span><o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span>rootNRE,0,rootGetWhat,attrName<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="410" valign="top" height="1977">
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">n1<span class="GramE">:<span style="FONT-WEIGHT: normal">is</span></span></span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        the number of nodes in the output tree (attribute is a
                        node, element is a node and content is a node). <span class="SpellE">Lev<span class="GramE">,type,src</span></span>,…
                        are repeated n1 number of times.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Lev:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        is the level of the node in the output tree (<span class="SpellE">attr</span>
                        is 1 level deeper than its element)<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Type:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        is the type of the node in the output tree:<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>E: element node.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>A: attribute node.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>C: content node.</span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        OA: optional attribute. just like attribute except that
                        if it doesn't have a value, it will not apper in teh
                        output.</span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Src</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        source of data for this output node.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>C: constant. I.e. data to be placed there should
                        be specified now.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>R: reference. I.e. a pattern tree is used with a
                        reference root (exp. $a).<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">NRE:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        is the <span class="SpellE">nre</span> to be assigned to
                        extra nodes. If there are nodes to be retrieved from the
                        database, then this <span class="SpellE">nre</span> will
                        be assigned to them in case type = C. if type = E or A,
                        then this <span class="SpellE">nre</span> is assigned to
                        the new node formed whether it is an element or <span class="SpellE">attr</span>
                        node.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Now,
                        there are 4 different information formats you need to
                        provide.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">1-
                        If <span class="SpellE">src</span> is constant.<o:p>
                        </o:p>
                        </span></b></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Str1:
                        should be the constant that will be the element name if
                        the type is element or <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>Text if the type is content.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;</span>Str1<span class="GramE">,str2</span>:
                        str1 should be the attribute name and sr2 is attribute
                        value if type is attribute node.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">2-
                        If <span class="SpellE">src</span> is reference.<o:p>
                        </o:p>
                        </span></b></p>
                        <p class="MsoNormal"><b style="mso-bidi-font-weight: normal"><u><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">str1<span class="GramE">,rootNRE,n2,ns,lev,rel,getWhat,attrName</span></span></u></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">….
                        If type is attribute. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">str1</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        is the name of the attribute<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">RootNRE</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        is the <span class="SpellE">nre</span> of the root of
                        the pattern tree node in the input witness trees.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">n2:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        is the number of nodes in the pattern tree. Level,
                        relation, <span class="SpellE">getWhat</span> should be
                        repeated num-1 number of times. <span class="SpellE">Level<span class="GramE">,relation,getWhat</span></span>
                        will describe nodes of the pattern tree.<span style="mso-spacerun: yes">&nbsp;
                        </span>The nodes will be listed in a depth-first
                        pre-order manner. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Ns:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        node source: if I, then index accesses are used to
                        retrieve nodes. If W, then the witness tree is scanned
                        for nodes. . If ns = I then you should pass in the
                        following lines a bunch of index access. If ns=W, then
                        after <span class="SpellE">lev</span> an extra field is
                        required, <span class="SpellE">tagName</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Level:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        the level of the node in the pattern tree. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">tagName</span></b></span>
                        </span><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        pass this field only if ns = W. otherwise, don’t pass
                        anything here.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Relation:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        the relationship with its parent in the pattern either
                        A: <span class="SpellE">ancs-desc</span> or P:
                        parent-child. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">GetWhat</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">is
                        what you want to get exactly for this node. It is
                        ignored for internal nodes. Works only for leaf nodes.
                        It can be one of the following:<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>S: gets the <span class="SpellE">subtree</span>
                        rooted at this node.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>T: gets the text of the node.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>I: gets the node itself only.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>V: gets value of the node. If it is an element
                        node, the tag name is returned. If it is an attribute
                        node, the attribute value of <span class="SpellE">attrName</span>
                        is returned. If it is a text node, the text is returned.
                        If it is a document node, the document name is returned.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>A: gets an attribute of the node. In this case,
                        you need to add a field to <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span><span class="GramE">the</span> string just after
                        ,A, which is the <span class="SpellE">attr</span> name
                        that you want returned.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>L: gets the local <span class="SpellE">subtree</span>
                        of the node. The difference between this<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>option and the ‘S’ option is that the ‘S’
                        will get you the <span class="SpellE">subtree</span> of
                        the node from the database. While the ‘L’ option
                        gets it from the witness tree.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">attrName</span></b></span>
                        </span><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        is the name of the attribute to be retrieved if <span class="SpellE">getWhat</span>
                        = A or getWhat=V. In the case of the V,&nbsp;if the&nbsp;node
                        is not an attribute node, pass NULL. otherwise, don’t
                        pass anything here.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><u><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">NOTE</span></u><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        if ns = I, then</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        the following num-1 lines to this line should be index
                        accesses or scan lines. Each line corresponds to a
                        pattern tree node in a depth-first pre-order traversal.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="GramE"><b style="mso-bidi-font-weight: normal"><u><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">rootNRE,</span></u></b></span><b style="mso-bidi-font-weight: normal"><u><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">n2,ns,lev,tagName,rel,getWhat,attrName</span></u></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">….<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;
                        </span>If type is element or content. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">RootNRE</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        is the <span class="SpellE">nre</span> of the root of
                        the pattern tree node in the input witness trees.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">n2:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        is the number of nodes in the pattern tree. Level,
                        relation, <span class="SpellE">getWhat</span> should be
                        repeated num-1 number of times. <span class="SpellE">Level<span class="GramE">,relation,getWhat</span></span>
                        will describe nodes of the pattern tree.<span style="mso-spacerun: yes">&nbsp;
                        </span>The nodes will be listed in a depth-first
                        pre-order manner. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Ns:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        node source: if I, then index accesses are used to
                        retrieve nodes. If W, then the witness tree is scanned
                        for nodes. . If ns = I then you should pass in the
                        following lines a bunch of index access. If ns=W, then
                        after <span class="SpellE">lev</span> an extra field is
                        required, <span class="SpellE">tagName</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Level:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        the level of the node in the pattern tree. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">tagName</span></b></span>
                        </span><b style="mso-bidi-font-weight: normal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        pass this field only if ns = W. otherwise, don’t pass
                        anything here.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Relation:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        the relationship with its parent in the pattern either
                        A: <span class="SpellE">ancs-desc</span> or P:
                        parent-child. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">GetWhat</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">is
                        what you want to get exactly for this node. It is
                        ignored for internal nodes. Works only for leaf nodes.
                        It can be one of the following:<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>S: gets the <span class="SpellE">subtree</span>
                        rooted at this node.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>T: gets the text of the node.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>I: gets the node itself only.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        &nbsp;&nbsp;&nbsp;</span>V: gets value of the node. If
                        it is an element node, the tag name is returned. If it
                        is an attribute node, the attribute value of <span class="SpellE">attrName</span>
                        is returned. If it is a text node, the text is returned.
                        If it is a document node, the document name is returned.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>A: gets an attribute of the node. In this case,
                        you need to add a field to <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span><span class="GramE">the</span> string just after
                        ,A, which is the <span class="SpellE">attr</span> name
                        that you want returned.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>L: gets the local <span class="SpellE">subtree</span>
                        of the node. The difference between this<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>option and the ‘S’ option is that the ‘S’
                        will get you the <span class="SpellE">subtree</span> of
                        the node from the database. While the ‘L’ option
                        gets it from the witness tree.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span class="SpellE"><span class="GramE"><b style="mso-bidi-font-weight: normal">attrName</b></span>
                        </span>: is the name of the attribute to be retrieved if
                        <span class="SpellE">getWhat</span> = A or getWhat=V. In
                        the case of the V,&nbsp;if the&nbsp;node is not an
                        attribute node, pass NULL. otherwise, don’t pass
                        anything here. <o:p>
                        </o:p>
                        <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><u><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">NOTE</span></u><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        if ns = I, then</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        the following num-1 lines to this line should be index
                        accesses or scan lines. Each line corresponds to a
                        pattern tree node in a depth-first pre-order traversal.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="GramE"><b style="mso-bidi-font-weight: normal"><u><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">rootNRE,</span></u></b></span><b style="mso-bidi-font-weight: normal"><u><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">0,rootGetWhat,attrName</span></u></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">.
                        This is a special case of the previous case. This is
                        when you want to output the root or information
                        regarding the root.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">RootNRE</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        is the <span class="SpellE">nre</span> of the node in
                        the input witness trees that you want to retrieve its
                        data.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">RootGetWhat</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">is
                        what you want to get exactly for this node. It can be
                        one of the following:<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>S: gets the <span class="SpellE">subtree</span>
                        rooted at this node.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>T: gets the text of the node.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>I: gets the node itself only.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>V: gets value of the node. If it is an element
                        node, the tag name is returned. If it is an attribute
                        node, the attribute value of <span class="SpellE">attrName</span>
                        is returned. If it is a text node, the text is returned.
                        If it is a document node, the document name is returned.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>A: gets an attribute of the node. In this case,
                        you need to add a field to <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span><span class="GramE">the</span> string just after
                        ,A, which is the <span class="SpellE">attr</span> name
                        that you want returned.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>L: gets
                        the local <span class="SpellE">subtree</span> of the
                        node. The difference between this<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>option and the ‘S’ option is that the ‘S’
                        will get you the <span class="SpellE">subtree</span> of
                        the node from the database. While the ‘L’ option
                        gets it from the witness tree.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span class="SpellE"><span class="GramE"><b style="mso-bidi-font-weight: normal">attrName</b></span>
                        </span>: is the name of the attribute to be retrieved if
                        <span class="SpellE">getWhat</span> = A or getWhat=V. In
                        the case of the V,&nbsp;if the&nbsp;node is not an
                        attribute node, pass NULL. otherwise, don’t pass
                        anything here. </span><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'> <o:p></o:p></span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 15'>
					<td width="177" valign="top" height="427">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Stack-based
  Term Join<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>TmpFile.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="427">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_t0"></a>t,NRE,indexName,filename,phrase,function1,function2,function3,depth,simpleScore,<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>keywordset,meetAlg,parentIndexName</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="410" valign="top" height="427">
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">NRE:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold">
                        the <span class="SpellE">nre</span> to be assigned to
                        the output nodes.<b> <o:p>
                        </o:p>
                        </b></span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">IndexName</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        is the name of the index to look up when searching for
                        the words in the sentence. It should be some kind of an
                        inverted index or so.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Filename:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;</span>name
                        of the file the index is built on.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Phrase:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        this is the phrase you want to find its word in the
                        document. And common ancestors of these words will be
                        returned.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Function1:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        score function. The number you pass here is the number
                        of the function in a switch statement. Basically, you
                        write your function, add a case with a number to the
                        first switch statement in the </span><span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'">EVALUATION_OP_SBTERMJOIN</span><span style="FONT-SIZE: 10pt">
                        case. The function should take in a char * and return a
                        double.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt">Function2:</span></b><span style="FONT-SIZE: 10pt">
                        ancestor depth threshold function. The number is the
                        same as above but to the second switch statement. The
                        function you use should take in <span class="SpellE">Keytype</span>
                        and <span class="SpellE">int</span> and return an
                        integer, which is the number of level to go up in the
                        document. If –1 is returned the function does nothing.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Function3:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        ancestor qualifies function. The number is like the
                        above except that it is the third switch statement in
                        the </span><span style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'">EVALUATION_OP_SBTERMJOIN</span><span style="FONT-SIZE: 10pt">
                        case. The function should take a double in and returns a
                        true or false.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt">Depth:
                        </span></b><span style="FONT-SIZE: 10pt">is the expected
                        depth of the document. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt">SimpleScore</span></b></span><b><span style="FONT-SIZE: 10pt">:</span></b><span style="FONT-SIZE: 10pt">
                        pass a 0 or 1 value here. 0 if you want the complex
                        score to be calculated for each ancestor or 1 if you
                        want a simple score that counts the number of
                        occurrences of each term per <span class="SpellE">ancs</span>.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt">Keywordset<span class="GramE">:<span style="FONT-WEIGHT: normal">Cong</span></span></span></b></span><span style="FONT-SIZE: 10pt">
                        stuff. Just pass 0.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt">MeetAlg</span></b></span><b><span style="FONT-SIZE: 10pt">:</span></b><span style="FONT-SIZE: 10pt">
                        pass 0 or 1. 0 if you want the stack based <span class="SpellE">alg</span>
                        to be performed. 1 if you want the meet <span class="SpellE">alg</span>
                        to be performed.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt">ParentIndexName</span></b></span><b><span style="FONT-SIZE: 10pt">:</span></b><span style="FONT-SIZE: 10pt">
                        optional. If passed the parent index is used in getting
                        ancestors. Otherwise, accessing the database.</span><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><o:p></o:p>
							</span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 16'>
					<td width="177" valign="top" height="435">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Navigational
  Get Relative<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>NavigationalGetRelative.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="435">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_V"></a>V,nre,relation,num,nre2<o:p></o:p></span></p>
					</td>
					<td width="410" valign="top" height="435">
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">NRE</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        <span class="SpellE">nre</span> of the node you want to
                        get its relative.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Relation:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        one of the following:<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>1A: gets a specific ancestor. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>1C: gets a specific child.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>AAO: gets all ancestors and outputs them one at a
                        time.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span><st1:place w:st="on">
                        <st1:City 
w:st="on">
                        ADO</st1:City>
                        </st1:place>
                        : gets all descendants and outputs them one at a time.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>ACO: gets all children and outputs them one at a
                        time.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>AAOI: gets all ancestors and outputs them one at
                        a time.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Including
                        the node itself.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>ADOI: gets all descendants and outputs them one
                        at a time. Including the node itself.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>ACOI: gets all children and outputs them one at a
                        time. Including the node itself<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>AAT: gets all ancestors and outputs them all at
                        once in the same output tree.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>ADT: gets all descendants and outputs them all at
                        once in the same output tree.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>ACT: gets all children and outputs them all at
                        once in the same output tree.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>AT: gets all text nodes under node index.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>CT: gets
                        children text nodes under node index.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>A: gets attribute node of node index.<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;
                        </span><o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">Num:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">
                        is used only when relation is one of the following:<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>1A: num is used to specify which ancestor is
                        returned in terms of levels higher. So if num=1, the
                        immediate parent is returned. Num=2, the grandparent is
                        returned and so on. <o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>1C: num is used to specify which child to be
                        returned. Num=0, first child is returned, num =1 second
                        child<span class="GramE">,…</span> num=-1, last child
                        is returned.<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">NRE2</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        <span class="SpellE">nre</span> to be assigned to the
                        retrieved relative(s).</span><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><o:p></o:p></span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 17'>
					<td width="177" valign="top" height="53">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>FileWriter</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>FileWriterIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="53">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_w"></a>w,filename</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="410" valign="top" height="53">
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Filename:</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'> the name of the file that
  you want your query results to be written to. This cannot be a leaf node.
  Place it anywhere in the query plan except at leaves.<o:p></o:p></span></p>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 18'>
					<td width="177" valign="top" height="53">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>FileReader</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>FileReaderIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="53">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_d0"></a>d,filename</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="410" valign="top" height="53">
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Filename:</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'> the name of the file that
  you want to read from. This must be a leaf node. You need to write query
  results using FileWriter<span style="mso-spacerun: yes">&nbsp;&nbsp; </span>before
  using fileReader to read them.<b>
									<o:p></o:p></b></span></p>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 19'>
					<td width="177" valign="top" height="196">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Pick
  Iterator<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>PickIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="196">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_K"></a>K,function1,function2,depth,sort<o:p></o:p></span></p>
					</td>
					<td width="410" valign="top" height="196">
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Function1:</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'> worth outputting
  function.<span style="mso-spacerun: yes">&nbsp; </span>This function determines whether
  or not a node is worth outputting. The number you pass here is the number of
  the function in a switch statement. Basically, you write your function, add a
  case with a number to the first switch statement in the </span><span style="FONT-SIZE:10pt;FONT-FAMILY:'Courier New'">EVALUATION_OP_PICK</span><span style='FONT-SIZE:10pt'> case. The function should take in a witnessTree *
  and return a bool.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt'>Function2:</span></b><span style='FONT-SIZE:10pt'> percentage function.<span style="mso-spacerun:
  yes">&nbsp; </span>Returns the percentage of children of a node that if these
  children are worth outputting, the parent is output instead. The number is
  the same as above but to the second switch statement. The function you use
  should take in nothing and return a float. <o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt'>Depth: </span></b><span style='FONT-SIZE:10pt'>is the expected depth of the document.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt'>Sort:</span></b><span style='FONT-SIZE:10pt'> if 1, the input will be sorted in the Pick
  iterator. If 0, the input is assumed to be sorted by start key.</span><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
									<o:p></o:p>
								</span></b></p>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 20'>
					<td width="177" valign="top" height="195">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Data
  Instantiation<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>DataInstatiationIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="195">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_i0"></a>i,index,scope,cutDepth,getElement,getAttr,getContent</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="410" valign="top" height="195">
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Index:</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'> the index of the node in
  the witness tree that you want to instantiate its subtree.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Scope:</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun:
  yes">&nbsp; </span>I: get node itself<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>S: get whole subtree<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-spacerun:
  yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>C: get whole subtree until a given depth<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>CutDepth:</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'> applicable if scope = C.
  pass the depth to which you want the subtree to be instatiated.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>GetElement:</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'> if 0, no element nodes in
  the subtree are returned. If 1, element nodes are returned.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>GetAttr:
  </span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>if 0, no
  attr nodes in the subtree are returned. If 1, attr nodes are returned.<b>
									<o:p></o:p></b></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>GetContent:
  </span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>if 0, no
  content nodes in the subtree are returned. If 1, content nodes are returned.<b>
									<o:p></o:p></b></span></p>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 21'>
					<td width="177" valign="top" height="53">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>SortStopK</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>SortStopKIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="53">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_k0"></a>k,K,inSize</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="410" valign="top" height="53">
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>K:
  </span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>number of
  outputs. This iterator returns top k scoring inputs.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>inSize</span></b>
							<b>
								<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>: </span></b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>number of inputs to be
  read by this iterator. Among these inputs, top k scoring ones will be output
  in order of descending score.<b><o:p></o:p></b></span></p>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 22'>
					<td width="177" valign="top" height="105">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Projection<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>&nbsp;
  <o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>ProjectionIterator.h</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="473" valign="top" height="105">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_P"></a>P,num,NRE,..,preserveNodeOrder</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>
								<o:p></o:p>
							</span></p>
					</td>
					<td width="410" valign="top" height="105">
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Num:</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-weight:bold;mso-bidi-font-size:12.0pt'>
  number of NRE you want to keep in the tree.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>NRE:</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-weight:bold;mso-bidi-font-size:12.0pt'>
  NRE of nodes to be kept. NRE should be repeated <u>num</u> number of times.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>PreserveNodeOrder:</span></b><span style='FONT-SIZE:10pt;mso-bidi-font-weight:bold;mso-bidi-font-size:12.0pt'>
  if 1: nodes are kept in the output tree in their original order.<o:p></o:p></span></p>
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-weight:bold;mso-bidi-font-size:12.0pt'><span style="mso-spacerun:
  yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>0: nodes are kept in the
  output tree in the order of the input NRE.<o:p></o:p></span></p>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 23'>
					<td width="177" valign="top" height="537">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>Universal
  Quantification<o:p></o:p></span></p>
					</td>
					<td width="473" valign="top" height="537">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'><a name = "_u"></a>u,rootNRE,num,relation</span>
							<span style='FONT-SIZE:10pt;mso-bidi-font-size:12.0pt'>,…,compareWhat,attrName,operation,number,str<o:p></o:p></span></p>
					</td>
					<td width="410" valign="top" height="537">
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">rootNRE</span></b></span>
                        </span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold">the
                        <span class="SpellE">nre</span> of the node you want to
                        perform universal quantification on. For example, if you
                        want to get books that have all authors affiliated with <st1:place w:st="on">
                        <st1:PlaceType 
w:st="on">
                        university</st1:PlaceType>
                        of <st1:PlaceName 
w:st="on">
                        Michigan</st1:PlaceName>
                        </st1:place>
                        . Then, <span class="SpellE">nre</span> of book in the
                        input trees should be passed here.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="GramE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">num</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold"><span style="mso-spacerun: yes">&nbsp;</span>is
                        the number of nodes in the pattern. So, to follow up on
                        the previous example. <span class="GramE">the</span>
                        pattern is<span style="mso-spacerun: yes">&nbsp; </span>author
                        with child/<span class="SpellE">desc</span> affiliation.
                        So that gives us 2 for num. the following num lines in
                        the evaluation plan should be index accesses to pattern
                        nodes. In our example, the following 2 lines to the
                        universal quantification line should be index access to
                        author and then index access to affiliation.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="GramE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">relation</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold">relation
                        is repeated num number of times. For each node in the
                        pattern, the corresponding relation is either P or A
                        (parent-child or <span class="SpellE">ancs-desc</span>).
                        This tells us the relation of the node with what comes
                        before it in the pattern. For the root of the pattern,
                        relation is its relationship with the <span class="SpellE">rootNRE</span>
                        node. To follow up on our example, you should pass 2
                        relations, one is for book-author and the other is for
                        author-affiliation.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">compareWhat</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold">it
                        is one of two values:<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>T: if you want text of the leaf of the pattern to
                        be checked.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>A: if you want an attribute of the leaf of the
                        pattern to be checked.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold"><span style="mso-spacerun: yes">&nbsp;</span>In
                        our example, we want to check the affiliation text and
                        make sure it is equal to <st1:place 
w:st="on">
                        <st1:PlaceType w:st="on">
                        university</st1:PlaceType>
                        of <st1:PlaceName 
w:st="on">
                        Michigan</st1:PlaceName>
                        </st1:place>
                        .<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">attrName</span></b></span>
                        </span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold">if
                        you use the A option in the previous parameter, then you
                        should pass an attribute name. Otherwise, pass NULL.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">operation:</span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">EQN,NEN,LTN,LEN,GTN,GEN:=,!=,&lt;,&lt;=,&gt;,&gt;=
                        using number comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>EQS<span class="GramE">,NES,LTS,LES,GTS,GES</span>:=,!=,&lt;,&lt;=,&gt;,&gt;=
                        using string comparison.<span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span><o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>C: contains. String comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>S: starts with. String comparison.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold">In
                        our example, we should use EQS because we want the <span class="SpellE">affilation</span>
                        text be equal to “<st1:place 
w:st="on">
                        <st1:PlaceType w:st="on">
                        university</st1:PlaceType>
                        of <st1:PlaceName 
w:st="on">
                        Michigan</st1:PlaceName>
                        </st1:place>
                        ”.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="GramE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">number</span></b></span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold">if
                        you use any of the number operations, then pass a number
                        to compare against. Otherwise, pass -1.<o:p>
                        </o:p>
                        </span></p>
                        <p class="MsoNormal"><span class="SpellE"><span class="GramE"><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">str</span></b></span>
                        </span><b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">:
                        </span></b><span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt; mso-bidi-font-weight: bold">if
                        you use any of the string operations, then pass a
                        string. Otherwise, pass NULL. In our example, pass
                        “University of Michigan” here.</span><span style='FONT-SIZE:10pt;mso-bidi-font-weight:bold;mso-bidi-font-size:12.0pt'><o:p></o:p></span>
					</td>
				</tr>
                <tr>
					<td width="177" valign="top" height="132">
						<p><span style='FONT-SIZE:10pt'>MLCA (Meaningful Lowest Common Ancestor)<o:p></o:p></span></p>
						<p><span style='FONT-SIZE:10pt'>meaningfulClosestCommon</span>
							<span style='FONT-SIZE:10pt'>AncestorStructure.h <o:p></o:p></span></p>
					</td>
					<td width="473" valign="top" height="132">
						<p class="MsoNormal"><span style='FONT-SIZE:10pt'><a name = "_m"></a>m,num,NRE1,NRE2,...,NREnum,assignedNREforRoot,expectedSize,expectedDepth
								<o:p></o:p>
                        </span></p>
					</td>
					<td width="410" valign="top" height="132">
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt'>Num</span></b><span style='FONT-SIZE:10pt'>: number of leaf nodes you want to keep in the MLCAS
  (Meaningful Lowest Common Ancestor Structure) <o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt'>NRE<sub>i</sub></span></b><span style='FONT-SIZE:10pt'>: NRE value of the i<sub>th</sub> leaf node<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt'>assignedNREforRoot</span></b><span style='FONT-SIZE:10pt'>: assigned NRE for the root node of each MLCAS<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt'>expectedSize</span></b>
							<span style='FONT-SIZE:10pt'>: the max of the estimated size of all the&nbsp;
  inputs. Enter -1 if unknown.<o:p></o:p></span></p>
						<p class="MsoNormal"><b><span style='FONT-SIZE:10pt'>expectedDepth</span></b>
							<span style='FONT-SIZE:10pt'>: the depth of the lowest nodes from the
  inputs. Enter -1 if unknown<o:p></o:p></span></p>
					</td>
                </tr>
				<tr style='mso-yfti-irow: 24;mso-yfti-lastrow: yes'>
					<td width="177" valign="top" height="132" rowspan="7">
                        <span style="font-size: 10pt">Update</span>
                        <p><span style="font-size: 10pt">UpdatesIterator.h</span>
					</td>
					<td width="473" valign="top" height="44">
                        <span style='FONT-SIZE:10pt'><a name = "_U"></a></span><span style="font-size: 10pt; mso-bidi-font-size: 12.0pt"><br>
                        U,ModTNode,ElementNRE,CONST,constantValue<br>
                        U,ModTNode,ElementNRE,REF,ElementRefNRE<br>
                        U,ModTNode,ElementNRE,REF,DummyNodeNRE<br>
                        U,ModTNode,ElementNRE,REF,AttributeNRE,AttributeName<br>
                        <br>
                        </span>
					</td>
					<td width="410" valign="top" height="44">
                    <span style="font-size: 10pt; mso-bidi-font-size: 12.0pt">Modifying
                    a text node:&nbsp;</span>
                    <p><span style="font-size: 10pt; mso-bidi-font-size: 12.0pt"><b>ModTNode</b>
                    will modify the text value of the element with NRE=ElementNRE.<br>
                    Only one element node per witness tree should have an NRE=ElementNRE,<br>
                    otherwise an error will be issued, and the transaction will
                    be aborted. The new text value will become the last child of
                    the element (and all previous text nodes for this element
                    will be removed). &nbsp;When using the REF option, the NREs
                    for <b>ElementRefNRE</b>, <b>DummyNodeNRE</b>, and <b>AttributeNRE</b>
                    should also have only one node with this NRE in the witness
                    tree. If this is not the case, the query will be carried out
                    (by assigning the first of such values as the new text value
                    for the element node with NRE=ElementNRE) but a warning will
                    be issued.<br>
                    <br>
                    <b>Note</b>: all subsequent update operators have these same
                    restrictions. The first NRE, which specifies the variable to
                    modify must be a singleton (only one in the witness tree),
                    all subsequent NREs may be mapped to more than one node in a
                    given witness tree, but only the first of such values will
                    be used for the update.<br>
                    <br>
                    ...,<b>CONST</b>,<b>constantValue</b>: constantValue will be
                    the new text value.<br>
                    ...,<b>REF</b>,<b>ElementRefNRE</b>: the text value for the
                    element with NRE = ElementRefNRE will be the new text value.<br>
                    ...,<b>REF,DummyNodeNRE:</b> the value contained in the
                    &quot;Dummy Node&quot; (e.g.<br>
                    generated by the Function Iterator) with NRE=DummyNodeNRE is
                    the new text<br>
                    value.<br>
                    ...,<b>REF,AttributeNRE,AttributeName</b>: the value
                    associated with the<br>
                    attribute AttributeName is the new text value (an attribute
                    node stores<br>
                    all of the attribute name/value pairs associated with a
                    given element, so<br>
                    AttributeNRE by itself would specify a group of attributes).</span></p>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 24;mso-yfti-lastrow: yes'>
					<td width="473" valign="top" height="11">
                        <span style="font-size: 10pt; mso-bidi-font-size: 12.0pt">U,ModANode,AttributeNRE,AttributeName,CONST,constantValue<br>
                        U,ModANode,AttributeNRE,AttributeName,REF,ElementRefNRE<br>
                        U,ModANode,AttributeNRE,AttributeName,REF,DummyNodeNRE<br>
                        U,ModANode,AttributeNRE,AttributeName,REF,AttributeRefNRE,AttributeName<br>
                        </span>
					</td>
					<td width="410" valign="top" height="11">
                    <span style="font-size: 10pt; mso-bidi-font-size: 12.0pt">Modifying
                    an attribute value:<br>
                    <b>ModANode</b> will modify the value associated with
                    AttributeName (for the<br>
                    attribute node with NRE=AttributeNRE).<br>
                    As with ModTNode, both <b>CONST</b> and <b>REF</b> values
                    can be assigned to the<br>
                    attribute value, and the descriptions of these options are
                    the same as for<br>
                    <b>ModTNode</b>. If the attribute <b>AttributeName</b> does
                    not exist, an attribute<br>
                    value pair is not inserted.</span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 24;mso-yfti-lastrow: yes'>
					<td width="473" valign="top" height="11">
                        <span style="font-size: 10pt; mso-bidi-font-size: 12.0pt">U,DelTNode,ElementNodeNRE<br>
                        <br>
                        <br>
                        </span>
					</td>
					<td width="410" valign="top" height="11">
                    <span style="font-size: 10pt; mso-bidi-font-size: 12.0pt">Deleting
                    text node(s):</span>
                    <p><span style="font-size: 10pt; mso-bidi-font-size: 12.0pt"><b>DelTNode</b>
                    deletes all of the text content from the element node
                    specified<br>
                    by <b>ElementNodeNRE</b>.</span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 24;mso-yfti-lastrow: yes'>
					<td width="473" valign="top" height="11">
                        <span style="font-size: 10pt; mso-bidi-font-size: 12.0pt">U,DelAttrValue,AttributeNRE,AttributeName<br>
                        <br>
                        <br>
                        </span>
					</td>
					<td width="410" valign="top" height="11">
                    <span style="font-size: 10pt; mso-bidi-font-size: 12.0pt">Deleting
                    an attribute value:</span>
                    <p><span style="font-size: 10pt; mso-bidi-font-size: 12.0pt"><b>DelAttrValue</b>
                    deletes the attribute value associated with <b>AttributeName</b>,<br>
                    from the attribute node with NRE=AttributeNRE.</span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 24;mso-yfti-lastrow: yes'>
					<td width="473" valign="top" height="3">
                        <span style="font-size: 10pt; mso-bidi-font-size: 12.0pt">U,DelTree,ElementNRE<br>
                        <br>
                        <br>
                        </span>
					</td>
					<td width="410" valign="top" height="3">
                    <span style="font-size: 10pt; mso-bidi-font-size: 12.0pt">Deleting
                    a subtree (rooted at an element node):</span>
                    <p><span style="font-size: 10pt; mso-bidi-font-size: 12.0pt"><b>DelTree</b>
                    deletes the subtree rooted at the element with NRE=ElementNRE.
                    &nbsp;<br>
                    All descendent elements are deleted, as well as their
                    associated text and<br>
                    attributes.</span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 24;mso-yfti-lastrow: yes'>
					<td width="473" valign="top" height="3">
                        <span style="font-size: 10pt; mso-bidi-font-size: 12.0pt">U,InsAttr,ElementNRE,AttributeName,CONST,constantValue<br>
                        U,InsAttr,ElementNRE,AttributeName,REF,ElementRefNRE<br>
                        U,InsAttr,ElementNRE,AttributeName,REF,DummyNodeNRE<br>
                        U,InsAttr,ElementNRE,AttributeName,REF,AttributeRefNRE,AttributeName<br>
                        <br>
                        </span>
					</td>
					<td width="410" valign="top" height="3">
                    <span style="font-size: 10pt; mso-bidi-font-size: 12.0pt">Inserting
                    an attribute:</span>
                    <p><span style="font-size: 10pt; mso-bidi-font-size: 12.0pt"><b>InsAttr</b>
                    inserts an attribute (and possibly an associated value) as
                    the<br>
                    last attribute of the element with NRE=ElementNRE.<br>
                    The value of the attribute is given as either a constant
                    value, or a<br>
                    reference (in the same way as ModTNode).<br>
                    <br>
                    <b>Note</b>: 'U,InsAttr,ElementNRE,AttributeName,&lt;NOVAL&gt;'
                    is used to insert an<br>
                    attribute without a corresponding value.</span>
					</td>
				</tr>
				<tr style='mso-yfti-irow: 24;mso-yfti-lastrow: yes'>
					<td width="473" valign="top" height="3">
                        <span style="font-size: 10pt; mso-bidi-font-size: 12.0pt">A.
                        Inserting an element node with no associated
                        text/content:<br>
                        U,InsENode,ElementNRE,newChildElementTag,&lt;NOVAL&gt;<br>
                        <br>
                        B. Inserting an element node with a constant value='val'
                        for the child text node:<br>
                        U,InsENode,ElementNRE,newChildElementTag,CONST,val<br>
                        <br>
                        C. Inserting an element node with a reference value for
                        the child text node<br>
                        (note: X is not used, but must be included):<br>
                        U,InsENode,ElementNRE,newChildElementTag,REF,ElementNodeNRE,X<br>
                        U,InsENode,ElementNRE,newChildElementTag,REF,DummyNodeNRE,X<br>
                        U,InsENode,ElementNRE,newChildElementTag,REF,AttributeNRE,AttributeName<br>
                        </span>
					</td>
					<td width="410" valign="top" height="3">
                    <span style="font-size: 10pt; mso-bidi-font-size: 12.0pt"><b>nsENode</b>
                    inserts a new element as a child of the element having<br>
                    NRE=ElementNRE, with (optional) text and attribute values.</span>
                    <p><span style="font-size: 10pt; mso-bidi-font-size: 12.0pt">We
                    can include arguments for attribute insertion after any of
                    the<br>
                    five lines in 'A', 'B', and 'C',<br>
                    <br>
                    These attribute arguments are given as 0 or more repetitions
                    of the<br>
                    following five patterns (where X is not used, but must be
                    included):<br>
                    ,AttributeName,&lt;NOVAL&gt;<br>
                    ,AttributeName,CONST,constantValue<br>
                    ,AttributeName,REF,ElementRefNRE,X<br>
                    ,AttributeName,REF,DummyNodeNRE,X<br>
                    ,AttributeName,REF,AttributeRefNRE,AttributeName</span>
					</td>
				</tr>
			</table>
			<p class="MsoNormal">&nbsp;<o:p></o:p></p>
			<p class="MsoNormal"><span style='COLOR:black;FONT-FAMILY:Arial'>&nbsp;<o:p></o:p></span></p>
			<p class="MsoNormal"><span style='FONT-FAMILY:Arial'><a href="EvaluatorFileInterface.htm#_top">Back 
						to top</a><span style='COLOR:black'><o:p></o:p>
					</span>
				</span></p>
            
  <h2 style='MARGIN-TOP:0in'> 
    <![if !vml]>
    <![endif]>
    &nbsp;</h2>
  <p style='MARGIN-TOP:0in'><font size="2" face="Arial, Helvetica, sans-serif">Last Update:
  07/21/2004</font></p> 
		</div>
	</body>
</html>
