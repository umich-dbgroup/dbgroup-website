<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
	<HEAD>
		<TITLE>Timber Settings</TITLE>
			<LINK href="./TimberSettings/filelist.xml" rel="File-List">
			<LINK href="./TimberSettings/editdata.mso" rel="Edit-Time-Data"> 
        <STYLE>@page Section1 {size: 11.0in 8.5in; mso-page-orientation: landscape; margin: 1.25in 1.0in 1.25in 1.0in; mso-header-margin: .5in; mso-footer-margin: .5in; mso-paper-source: 0; }
	SPAN.SPELLE { mso-spl-e: yes }
	SPAN.GRAME { mso-gram-e: yes }
	P.MsoNormal { FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: "Times New Roman"; mso-style-parent: ""; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman" }
	LI.MsoNormal { FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: "Times New Roman"; mso-style-parent: ""; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman" }
	DIV.MsoNormal { FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: "Times New Roman"; mso-style-parent: ""; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman" }
	H1 { FONT-WEIGHT: normal; FONT-SIZE: 24pt; MARGIN: 12pt 0in 3pt; COLOR: black; FONT-FAMILY: Arial; mso-pagination: widow-orphan; mso-style-next: Normal; mso-outline-level: 1; mso-font-kerning: 16.0pt; mso-bidi-font-weight: bold }
	H2 { FONT-WEIGHT: normal; FONT-SIZE: 18pt; MARGIN: 12pt 0in 3pt; COLOR: black; FONT-FAMILY: Arial; mso-pagination: widow-orphan; mso-style-next: Normal; mso-outline-level: 2; mso-bidi-font-weight: bold; mso-bidi-font-style: italic }
	P.MsoBodyText { FONT-SIZE: 10pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"; mso-bidi-font-size: 12.0pt }
	LI.MsoBodyText { FONT-SIZE: 10pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"; mso-bidi-font-size: 12.0pt }
	DIV.MsoBodyText { FONT-SIZE: 10pt; MARGIN: 0in 0in 0pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: justify; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"; mso-bidi-font-size: 12.0pt }
	P.MsoBodyText2 { FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; COLOR: black; FONT-FAMILY: Arial; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman" }
	LI.MsoBodyText2 { FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; COLOR: black; FONT-FAMILY: Arial; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman" }
	DIV.MsoBodyText2 { FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; COLOR: black; FONT-FAMILY: Arial; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman" }
	P.MsoBodyText3 { FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; COLOR: black; FONT-FAMILY: Arial; TEXT-ALIGN: justify; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman" }
	LI.MsoBodyText3 { FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; COLOR: black; FONT-FAMILY: Arial; TEXT-ALIGN: justify; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman" }
	DIV.MsoBodyText3 { FONT-SIZE: 12pt; MARGIN: 0in 0in 0pt; COLOR: black; FONT-FAMILY: Arial; TEXT-ALIGN: justify; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman" }
	A:link { COLOR: #660000; TEXT-DECORATION: underline; text-underline: single }
	SPAN.MsoHyperlink { COLOR: #660000; TEXT-DECORATION: underline; text-underline: single }
	A:visited { COLOR: purple; TEXT-DECORATION: underline; text-underline: single }
	SPAN.MsoHyperlinkFollowed { COLOR: purple; TEXT-DECORATION: underline; text-underline: single }
	P { FONT-SIZE: 12pt; MARGIN-LEFT: 0in; MARGIN-RIGHT: 0in; FONT-FAMILY: "Times New Roman"; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto }
	DIV.Section1 { page: Section1 }
.style1 {font-family: Arial}
</STYLE>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags" name="place"></o:SmartTagType>
				<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags" name="City"></o:SmartTagType></HEAD>
	<BODY lang="EN-US" style="tab-interval: .5in" vLink="purple" link="#660000">
		<DIV class="Section1">
            <H1 style="MARGIN-TOP: 0in"><A id="_top" name="_top">Frequently
            Asked Questions (FAQ)</A></H1>
			<h2>Contents</h2>
            <p><span style="font-family: Arial">This page covers some typical
            questions that might arise while using Timber. If you have problems that are not addressed here (or not addressed adequately), please <a href="http://kobe.eecs.umich.edu/bug.php">let us know</a>.</span></p>
            <p class="MsoNormal" style="MARGIN-LEFT:0.25in;tab-stops:list .5in"><span style="FONT-SIZE:10pt"><span style="mso-spacerun: yes"></span> <img src="TimberSettings/image001.gif" v:shapes="_x0000_i1025" width="15" height="15">&nbsp; 
    <span style="mso-spacerun: yes">&nbsp;&nbsp;</span></span><a href="#_DiskSpace"><span style="font-family: Arial">1.
            T</span><span style="FONT-FAMILY: Arial">he system says out 
    of disk space </span></a><span style="COLOR: black; FONT-FAMILY: Arial"><o:p></o:p>
				</span></p>
            <p class="MsoNormal" style="tab-stops:list .5in .75in"><span style="FONT-SIZE:
10pt;FONT-FAMILY:
Arial"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
    </span> <img border="0" src="TimberSettings/image001.gif" alt="*" v:shapes="_x0000_i1026" width="15" height="15">&nbsp; 
    <span style="mso-spacerun: yes">&nbsp;</span></span><a href="#_Logging"><span style="font-family: Arial">2.
            T</span><span style="FONT-FAMILY: Arial">he system says out 
    of logging space</span></a></p>
            <p class="MsoNormal" style="MARGIN-LEFT:0.25in;tab-stops:list .5in"><span style="FONT-SIZE:
10pt;FONT-FAMILY:
Arial">
    <img border="0" src="TimberSettings/image001.gif" alt="*" v:shapes="_x0000_i1026" width="15" height="15">&nbsp; 
    <span style="mso-spacerun: yes">&nbsp;</span></span><a href="#_PageSize"><span style="font-family: Arial">3.
            </span><span style="FONT-FAMILY: Arial">The system asks me to increase 
    the page size</span></a></p>
            <P class="MsoNormal" style="MARGIN-LEFT: 0.25in; tab-stops: list .5in"><IMG height="15" alt="*" src="TimberSettings/image001.gif" width="15" border="0" v:shapes="_x0000_i1026">&nbsp;<SPAN style="mso-spacerun: yes">&nbsp;
            </SPAN><a href="#_XQueryParser"><span style="font-family: Arial">4.
            My
            query doesn't seem to work</span></a><span style="font-family: Arial"><a href="#_XQueryParser">,
            but I'm sure it is a valid XQuery</a>&nbsp;</span></P>
            <P class="MsoNormal" style="MARGIN-LEFT: 0.25in; tab-stops: list .5in"><span style="font-family: Arial"><IMG height="15" alt="*" src="TimberSettings/image001.gif" width="15" border="0" v:shapes="_x0000_i1026">&nbsp;&nbsp;
            <a href="#_Timeout">5. Soap server time out</a></span></P>
            <P class="MsoNormal" style="MARGIN-LEFT: 0.25in; tab-stops: list .5in"><span style="font-family: Arial"><IMG height="15" alt="*" src="TimberSettings/image001.gif" width="15" border="0" v:shapes="_x0000_i1026">&nbsp;&nbsp;
            <a href="#_DBreorg">6. What is database reorganization, and how
            should I do it in Timber?</a></span></P>
            <P class="MsoNormal" style="MARGIN-LEFT: 0.25in; tab-stops: list .5in"><span style="font-family: Arial"><IMG height="15" alt="*" src="TimberSettings/image001.gif" width="15" border="0" v:shapes="_x0000_i1026">&nbsp;&nbsp;
            <a href="#_TypeIdx">7. What are the types of index supported by Timber, and how to
            choose which type(s) to use?</a></span></P>
            <P class="MsoNormal" style="MARGIN-LEFT: 0.25in; tab-stops: list .5in">&nbsp;</P>
			<P class="MsoNormal" style="MARGIN-LEFT: 0.25in; tab-stops: list .5in">&nbsp;</P>
            <h3 style="MARGIN-TOP: 0in"><a name="_DiskSpace"></a>  <font face="Arial">1.
            The
            system says out of disk space</font></h3>
			<p style="MARGIN-TOP: 0in"><font face="Arial">You will need to increase the volume size 
					by changing the <b>perf.server.*.device_quota</b> in 
					&lt;basedir&gt;/Timber/bin/resource/example.cfg file. The actual space a data 
					file may take when loaded into a volume may be significant
            larger than the original size of the XML document, depending on the number of nodes it 
					contains and&nbsp; indices build. Extra space on the volume is also needed for 
					queries.&nbsp;In general, we recommend you to set up the&nbsp;volume size to be 
					10 to 20 times the data file to be loaded into the volume. The minimum 
					recommended volume size is 50MB.&nbsp;Please note that&nbsp;
            to make any change in the configuration file effective, you will
            have to reload your dataset.</font></p>
			<p style="MARGIN-TOP: 0in"><SPAN style="FONT-FAMILY: Arial"><a href="#_top">Back 
						to top</a></SPAN></p>
            <h3 style="MARGIN-TOP: 0in"><a name="_Logging"></a><font face="Arial">2.
            The
            system says out of logging space</font></h3>
			<p style="MARGIN-TOP: 0in"><font face="Arial">You will need to increase the volume 
					size&nbsp; by changing the <b>perf.server.*.device_quota</b> in 
					&lt;basedir&gt;/Timber/bin/resource/example.cfg file, or turn the log off by 
					setting <b>?.server.*.sm_logging</b> to be <b>no</b>. you
            will have to reload your dataset to make the changes effective.
            Please note that&nbsp; to make any change in the configuration file
            effective, you will have to reload your dataset.</font></p>
			<P class="MsoNormal" style="TEXT-ALIGN: justify"><SPAN style="FONT-FAMILY: Arial"><a href="#_top">Back 
						to top</a><o:p></o:p>
				</SPAN></P>
		</DIV>
		<h2 style="MARGIN-TOP: 0in">&nbsp;</h2>
		<h3 style="MARGIN-TOP: 0in"><a name="_PageSize"></a>  <font face="Arial">3.
        The
        system asks me to increase container size</font></h3>
        <P style="MARGIN-TOP: 0in"><font face="Arial">You will need to change CONTAINER_SIZE
        in the file &lt;basedir&gt;<font size="3">/Timber/bin/Resource/timber.settings
        </font>to be he recommended size in the error message you get. This is the&nbsp;container size used 
			in&nbsp;structural joins - when a specific ancestor has lots of descendants, 
			they are kept in a shore file with each record size almost </font><font face="Arial">CONTAINER_SIZE.
        You do not have to reload your data to make yours changes in the Timber
        setting file effective.</font><BR>
		</P>
		<P style="MARGIN-TOP: 0in"><SPAN style="FONT-FAMILY: Arial"><a href="#_top">Back 
						to top</a>
				</SPAN>
		</P>
        <h3 style="MARGIN-TOP: 0in"><a name="_XQueryParser"></a><font face="Arial">4.
        My
        query doesn't seem to work, but I'm sure it is a valid XQuery</font></h3>
		<P style="MARGIN-TOP: 0in"><font face="Arial">First please note that
        XQuery is case-sensitive, and all XQuery keywords (such as <span style="FONT-SIZE:10pt;mso-bidi-font-size:12.0pt">for</span>,
        <span style="FONT-SIZE:10pt;mso-bidi-font-size:12.0pt">let</span>)<span style="mso-spacerun: yes">&nbsp;
        </span>and function names should be in lower case. If any keyword or
        function name of you query is written in upper case, the XQuery parser
        of Timber may not be able to correctly interpret it.&nbsp;</font></P>
		<P style="MARGIN-TOP: 0in"><font face="Arial">Second, your query
        contains certain tag name that happens to be identical to a XQuery
        keyword, the XQuery parser of Timber may not be able to correctly interpret
        it.</font></P>
		<P style="MARGIN-TOP: 0in"><font face="Arial">Third, your query may not
        yet be supported by Timber. Timber supports a wide range of features in
        XQuery. But there are still certain types of XQuery that are not
        currently supported by Timber.<span style="mso-spacerun: yes"> For
        example, current version of Timber does not support the keyword <b>distint</b>.
        In addition, we do not support nested queries with multiple nestings&nbsp;
        or nested queries that are not connected with the outer part via a join
        (either value join or structural indicated by a path).&nbsp;</span></font>
        <font face="Arial"><span style="mso-spacerun: yes">If you are certain
        that your query is valid,&nbsp; but it does not seem to work in Timber
        (breaks the system, or runs forever, or output incorrect results), y</span>our query is not 
			currently support by Timber yet. Please read <a href="GeneralizedXQueryGrammar.htm"> here</a> for
				XQuery Fragment Supported.&nbsp;If you think your query is
        supported by Timber, but still have problem with it, please r<a href="http://kobe.eecs.umich.edu/bug.php">eport
        it to us</a>.</font></P>
		<P style="MARGIN-TOP: 0in"><SPAN style="FONT-FAMILY: Arial"><a href="#_top">Back 
						to top</a>
				</SPAN></P>
		<h3 style="MARGIN-TOP: 0in"><a name="_Timeout"></a><font face="Arial">5.
        Soap server time out</font></h3>
        <P style="MARGIN-TOP: 0in"><span style="font-family: Arial">If you get
        the soap server time out error message while using the GUI, you can increase the client side
        time
        limitation (330000 milliseconds by default) by choosing <b> File</b>
        -&gt; <b> Change Client&nbsp; timeout</b>, or through the command line by
        adding the optional parameter <font size="1">timeoutmsecs</font> (in
        milliseonds) in the following command:&nbsp;</span></P>
        <P style="MARGIN-TOP: 0in"><span style="font-family: Arial"><font size="1">&nbsp;&lt;basedir&gt;/XQueryparser/parserrun/bin/release/parserrun&nbsp;
        -x -i xquery -o xml [-t timeoutinmsecs]</font></span></P>
        <P style="MARGIN-TOP: 0in"><SPAN style="FONT-FAMILY: Arial"><a href="#_top">Back 
						to top</a>
				</SPAN></P>
        <h3 style="MARGIN-TOP: 0in"><a name="_DBreorg"></a><span style="font-family: Arial">6.
        What is database reorganization, and how should I do it in Timber?</span></h3>
        <p class="MsoNormal"><span style="font-family: Arial">Timber provides
        update functionality by extending the XQuery language. &nbsp;When no
        updates have been performed on a Timber volume, all nodes for a document
        are laid out on the disk in document order. &nbsp;This is a key factor
        in efficient query execution. &nbsp;When updates are performed we may be
        required to put nodes into a separate unordered overflow portion of the
        file. This happens when we insert new nodes, and when when a node is
        modified so that its new value is larger than its previously stored
        value. &nbsp;If the overflow portion is large enough, query performance
        will suffer. &nbsp;To alleviate this problem, Timber provides a
        reorganize function that will take a file containing an overflow
        portion, and lay all of the nodes out on disk in document order.<br>
        <br>
        Reorganizing the file from the command line is executed as follows,
        where the document sbook.xml is the file to reorganize.:</span><br>
        </p>
        <p class="MsoNormal"><font face="Arial">&nbsp;<span style="FONT-SIZE: 10pt; mso-bidi-font-size: 12.0pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        &nbsp;timber -m reorganize -d sbook.xml</span></font></p>
        <P style="MARGIN-TOP: 0in">&nbsp;</P>
        <P style="MARGIN-TOP: 0in"><SPAN style="FONT-FAMILY: Arial"><a href="#_top">Back 
						to top</a>
				</SPAN></P>
        <h3 style="MARGIN-TOP: 0in"><a name="_TypeIdx"></a><span style="font-family: Arial">7.
        What are the types of index supported by Timber, and how to choose which
        type(s) to use?</span></h3>
        <p style="MARGIN-TOP: 0in"><span style="font-family: Arial">The types of
        index supported by Timber are listed below, along with brief explanation
        for each of them and example usage.&nbsp; An example index file can be
        found <a href="index.idx">here</a>.</span></p>
        
<table border="1" cellspacing="0" cellpadding="0" width="94%" height="68">
  <tr> 
    <td width="15%" height="1" align="center"><span style="font-family: Arial"><b><font size="2">&nbsp;Types 
      of Index</font></b></span></td>
    <td width="15%" height="1" align="center"><span style="font-family: Arial"><b><font size="2">Options</font></b></span></td>
    <td width="31%" height="1" align="center"><span style="font-family: Arial"><b><font size="2">Build Command </font></b></span></td>
    <td width="39%" height="1" align="center"><span style="font-family: Arial"><b><font size="2">Details</font></b></span></td>
  </tr>
  <tr> 
    <td width="15%" rowspan="2" height="75"><span style="font-family: Arial"><font size="1">&nbsp;Element 
      index(e)</font></span></td>
    <td width="15%" height="19"><span style="font-family: Arial"><font size="1">&nbsp;'t': 
      element tag</font></span></td>
    <td width="31%" height="19"><font size="1"><span style="font-family: Arial">sbook.xml	
      s et&nbsp; //Build element tag index</span></font></td>
    <td width="39%" height="19"><p><font size="1"><span style="font-family: Arial">Improve 
        query efficiency for queries retrieving&nbsp; elements by their tag names, 
        such as the following query<br>
        <br>
        </span></font><span style="font-family: Arial"><font size="1">f</font><font size="1">or 
        $a in document(&quot;sbook.xml&quot;)//author<br>
        </font></span><span style="font-family: Arial"><font size="1">return $a</font></span></p></td>
  </tr>
  <tr> 
    <td width="15%"><span style="font-family: Arial"><font size="1">'c': element 
      content</font></span></td>
    <td width="31%"><font size="1"><span style="font-family: Arial">sbook.xml	
      s ec title // Build element content index on content of element&nbsp; book 
      in sbook.xml</span></font></td>
    <td width="39%"><p><font size="1"><span style="font-family: Arial">Improve 
        query efficiency for queries retrieving elements by their element value, 
        such as the query below. NOTE: One element content index is needed for 
        each element to be retrieved by content value.<br>
        <br>
        for $b in document(&quot;sbook.xml&quot;)//book<br>
        where $b/title = &quot;Timber&quot;<br>
        return $b</span></font></p></td>
  </tr>
  <tr> 
    <td width="15%" rowspan="3" height="95"><span style="font-family: Arial"> 
      <font size="1"> Attribute index (a):</font></span></td>
    <td width="15%" height="36"><span style="font-family: Arial"> <font size="1">'n': 
      attribute name,&nbsp;</font></span></td>
    <td width="31%" height="31"><span style="font-family: Arial"><font size="1">sbook.xml 
      s an // Build attribuate name index</font></span></td>
    <td width="39%" height="31"><font size="1"><span style="font-family: Arial">Improve 
      query efficiency for queries retrieving&nbsp; elements by their attribute 
      names, such as the following query<br>
      <br>
      <font size="1">f</font><font size="1">or $a in document(&quot;sbook.xml&quot;)//book<br>
      <span style="font-family: Arial"><font size="1">where $a/@* = &quot;Timber&quot;<br>
      </font></span> </font></span><span style="font-family: Arial"><font size="1">return 
      $a</font></span></font></td>
  </tr>
  <tr> 
    <td width="15%" height="36"><span style="font-family: Arial"> <font size="1">'v': 
      attribute value,</font></span></td>
    <td width="31%" height="31"><span style="font-family: Arial"><font size="1">sbook.xml 
      s av // Build attribuate value index</font></span></td>
    <td width="39%" height="31"><font size="1"><span style="font-family: Arial">Improve 
      query efficiency for queries retrieving&nbsp; elements by their attribute 
      values, such as the following query <br>
      </span></font>
      <p><font size="1"><span style="font-family: Arial">f<font size="1">or $a in document(&quot;sbook.xml&quot;)//@editor</font></span><span style="FONT-FAMILY: Arial"><br>where
      $a = &quot;John&quot;</span><span style="font-family: Arial"><br>
      </span><span style="font-family: Arial"><font size="1">return $a</font></span></font></p>
    </td>
  </tr>
  <tr> 
    <td width="15%" height="19"><span style="font-family: Arial"><font size="1">'c': 
      attribute content (needs optional value)</font></span></td>
    <td width="31%" height="31"><span style="font-family: Arial"><font size="1">sbook.xml 
      s av editor// Build attribuate content index</font></span></td>
    <td width="39%" height="31"><font size="1"><span style="font-family: Arial">improve 
      query efficiency for queries retrieving elements by their attribute value, 
      such as the query below. NOTE: One attribute content index is needed for 
      each element to be retrieved by its attribute content value.<br>
      <br>
      for $b in document(&quot;sbook.xml&quot;)//book<br>
      where $b/@editor = &quot;Yunyaor&quot;<br>
      return $b </span></font></td>
  </tr>
  <tr> 
    <td width="15%" height="19"><span style="font-family: Arial"><font size="1">Text 
      index (t):</font></span></td>
    <td width="15%" height="19"><span style="font-family: Arial"> <font size="1"> 
      'v' as text value</font></span></td>
    <td width="31%" height="19"><span style="font-family: Arial"><font size="1">sbook.xml 
      s tv // Build text value index</font></span></td>
    <td width="39%" height="19"><font size="1">Improve query efficiency for
      retrieving text by its value similar to element content index without
      element name restriction,&nbsp; but the return type is text node.</font></td>
  </tr>
  <tr> 
    <td width="15%" height="19" rowspan="4"><span style="font-family: Arial"> 
      <font size="1"> &nbsp;Inverted index (i):</font></span></td>
    <td width="15%" height="5"><span style="font-family: Arial"> <font size="1"> 
      'e': index the leaf level element node</font></span></td>
    <td width="31%" height="10" rowspan="2"><span style="font-family: Arial"><font size="1">sbook.xml 
      s ie // Build inverted index on leaf level element node???(TODO)</font></span></td>
    <td width="39%" height="19" rowspan="4"><font size="1">This is used by more
      advanced evaluation involving IR, currently not support at XQuery user
      level.</font>
      <p>&nbsp;</p>
    </td>
  </tr>
  <tr> 
    <td width="15%" height="5"><span style="font-family: Arial"><font size="1"> 
      or 't': index the leaf level&nbsp; text node</font></span></td>
  </tr>
  <tr> 
    <td width="15%" height="5"><span style="font-family: Arial"> <font size="1"> 
      &nbsp;'s':: stem</font></span></td>
    <td width="31%" height="9" rowspan="2"><font size="1"><span style="FONT-FAMILY: Arial">sbook.xml
      s itn // Build inverted index of leaf level content no-stemming</span></font></td>
  </tr>
  <tr> 
    <td width="15%" height="4"><span style="font-family: Arial"><font size="1"> 
      &nbsp;'n': nostem</font></span></td>
  </tr>
  <tr> 
    <td width="15%" height="19"><span style="font-family: Arial"> <font size="1"> 
      Parent index (p):</font></span></td>
    <td width="15%" height="19"><span style="font-family: Arial"> <font size="1"> 
      no additional options</font></span></td>
    <td width="31%" height="19"><span style="font-family: Arial"><font size="1">sbook.xml 
      s p// Build parent index for all elements</font></span></td>
    <td width="39%" height="19"><font size="1">This is used by more advanced
      evaluation such as meet iterator, currently not support at XQuery user
      level.</font></td>
  </tr>
  <tr> 
    <td width="15%" height="19"><span style="font-family: Arial"> <font size="1"> 
      Updatable element tag index (1):</font></span></td>
    <td width="15%" height="19"><span style="font-family: Arial"> <font size="1"> 
      no additional options</font></span></td>
    <td width="31%" height="19"><span style="font-family: Arial"><font size="1">sbook.xml 
      s 1// Build updatable element tag index</font></span></td>
    <td width="39%" height="19"><font size="1">This index will help speed up the same qeries as an element tag index. While the element tag index will be updated by any of the XQuery update functions, the updatable element tag index (tagid) is better optimized for these updates and will be much faster. As a tradeoff, regular (non update) queries will be slightly slower for this index (as compared to the element tag index). Note: you would never want to have both an element tag index and an index of this type built on the same data set, since both indices would have to be updated when update queries were issued.</font></td>
  </tr>
  <tr> 
    <td width="15%" height="19"><span style="font-family: Arial"> <font size="1"> 
      Updatable attribute name index (2):</font></span></td>
    <td width="15%" height="19"><span style="font-family: Arial"> <font size="1"> 
      &nbsp;no additional options</font></span></td>
    <td width="31%" height="19"><span style="font-family: Arial"><font size="1">sbook.xml 
      s 1// Build updatable attribute name index</font></span></td>
    <td width="39%" height="19"><font size="1">This index will help speed <span class="style1">up the same queries as an attribute name index. The performance tradeoffs are the same as for the updatable element tag index above. Similarly, you would never want to build both this index and the attribute name index. </span></font></td>
  </tr>
  <tr> 
    <td width="15%" height="19" rowspan="3"><span style="font-family: Arial"> 
      <font size="1"> Join index (j):</font></span></td>
    <td width="15%" height="7"><span style="font-family: Arial"> <font size="1"> 
      &nbsp;'ec' elementcontent</font></span></td>
    <td width="31%" height="19" rowspan="3"><span style="FONT-FAMILY: Arial"><font size="1">sbook.xml
      d j ec page av number // Build join index //page = //@number</font></span></td>
    <td width="39%" height="19" rowspan="3"><span style="FONT-FAMILY: Arial"><font size="1">&nbsp;*
      only [Double] is forced no matter [Int|String|Float|Double] is given<br>
      * with 4 options [left side type] [left side tag/attribute name] [right
      side type] [right side tag/attribute name]</font></span>
      <p><font size="1"><span style="FONT-FAMILY: Arial">Improve equality join
      queries according to left side and right side built. ac is similar to av
      but return element node and so currently not used by the Optimizer. Note
      that the mirror index is always built for example, leftside = rightside
      index will be coupled by rightside = leftside index.</span></font></p>
      <p><font size="1"><span style="FONT-FAMILY: Arial">for $a in
      document(&quot;sbook.xml&quot;)//book</span></font><br><font size="1"><span style="FONT-FAMILY: Arial">where $a/page =
      $a/@number</span></font><br><font size="1"><span style="FONT-FAMILY: Arial">return $a</span></font></td>
  </tr>
  <tr> 
    <td width="15%" height="6"><span style="font-family: Arial"> <font size="1"> 
      &nbsp;'av' attributevalue</font></span></td>
  </tr>
  <tr> 
    <td width="15%" height="6"><span style="font-family: Arial"> <font size="1"> 
      'ac' attributecontent</font></span></td>
  </tr>
</table>
        <P style="MARGIN-TOP: 0in"><span style="font-family: Arial">
        &nbsp;<br>
        </span><SPAN style="FONT-FAMILY: Arial"><a href="#_top">Back 
						to top</a>
				</SPAN></P>
				

       <h3 style="MARGIN-TOP: 0in"><a name="_OutOfKeys"></a><span style="font-family: Arial">8.
        While performing an 'insert' update query, I received the error message 'could not generate a new key... the range is too small', what should I do?</span></h3>
        <p class="MsoNormal"><span style="font-family: Arial">The node keys in Timber are doubles. This allows Timber to insert a new node by assigning a key that lies between the two existing node keys. Unfortunately, after many updates, the available space (due to the precision of the doubles -- which is worse with larger numbers) may be exhausted. In this case, the update query will be aborted, and the device is left unchanged. Currently, Timber does not support renumbering of keys on the fly and the device (and indices) will need to be recreated if this error message occurs during a required insert query. Unfortunatley, the easiest way to do this is to dump the (Timber) device to an XML file and reload it (and any indices). For the sample data file, we would simply execute:</span></p>
        <p class="MsoNormal style1">&nbsp;</p>
        <p class="MsoNormal style1">timber -m physical -f dump.xml -q ..\dump-query.txt</p>
        <p class="MsoNormal style1">&nbsp;</p>
        <p class="MsoNormal style1"><span style="font-family: Arial">where dump-query.txt contains:</span></p>
        <p class="MsoNormal style1">V,1,ADT,num,2<br>
        S,1,sbook.xml,0,DOCUMENT_NODE,THISNODE,1,1,XMLFILENAME,EQ,STR,sbook.xml,0,0,0</p>
        <p class="MsoNormal style1">&nbsp;</p>
		<p class="MsoNormal style1"><span style="font-family: Arial">The resulting xml file dump.xml needs to have the file name removed from the first line, and then it can be reloaded into Timber:</span></p>
		<p class="MsoNormal style1">timber -m load -r 1 -d dump.xml </p>
		<br>
		<P style="MARGIN-TOP: 0in"><SPAN style="FONT-FAMILY: Arial"><a href="#_top">Back 
						to top</a>
				</SPAN></P>				

		<P style="MARGIN-TOP: 0in"><SPAN style="FONT-FAMILY: Arial">Last Updated:
        07/23/2004</SPAN></P>
	</BODY>
</HTML>
